import { OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { ConfirmationDialogComponent } from '../confirmation-dialog';
import { EsnDialog, EsnDialogRef } from '../dialog';
import { DraftTmpElement, EsnDraftService } from '../../utils/services/drafts';
import { EsnWizardStep, EsnWizardStepperStep } from './model/step-parameters';
import * as i0 from "@angular/core";
export declare class EsnWizard implements OnInit {
    dialogRef: EsnDialogRef<ConfirmationDialogComponent>;
    activatedRoute: ActivatedRoute;
    router: Router;
    elementCreationService: EsnDraftService<DraftTmpElement>;
    dialog: EsnDialog;
    title: string;
    createButtonLabel: string;
    steps: EsnWizardStep[];
    stepperSteps: {
        [key in string]: EsnWizardStepperStep;
    };
    getRedirectPathOnCreationSuccess: (createdId: string | boolean) => string | void;
    redirectUrlOnClose?: string;
    getSubtitle: (elm: DraftTmpElement) => string | undefined;
    isRouted: boolean;
    elementUuid?: string;
    initElement: boolean;
    closeConfirmDialogData?: any;
    onSuccess: (createdId: string | boolean) => void;
    contentPhase: string;
    subscriptions: Subscription;
    subtitle?: string;
    currentStep: string;
    stepperStepEnum: string[];
    stepToDisplay: string;
    initialElement: DraftTmpElement;
    currentStepIndex: number;
    nextStepLoading: boolean;
    isLastStep: boolean;
    isUploadOngoing: boolean;
    shouldProcessStepChange: boolean;
    constructor(dialogRef: EsnDialogRef<ConfirmationDialogComponent>, activatedRoute: ActivatedRoute, router: Router, elementCreationService: EsnDraftService<DraftTmpElement>, dialog: EsnDialog);
    get nextStepDisabled(): boolean;
    ngOnInit(): Promise<void>;
    onCloseClick(): Promise<void>;
    _displayIncompleteDialog(stepPath: string): void;
    get selectedStepperStepIndex(): number;
    handleBackClick(): void;
    handleNextClick(): Promise<void>;
    _saveAndGoToStep(stepIndex: number): Promise<void>;
    backToHome(): void;
    ngOnDestroy(): void;
    private closeAndRedirect;
    onStepChange(event: any): Promise<void>;
    onCreate(): Promise<void>;
    couldCreate(): boolean;
    _listenForRouteEvents(): void;
    _refreshWithAnimation(): void;
    _refreshCurrentStep(): void;
    getStepperStepCompletion(step: string): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<EsnWizard, [{ optional: true; }, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<EsnWizard, "esn-wizard", never, { "title": "title"; "createButtonLabel": "createButtonLabel"; "steps": "steps"; "stepperSteps": "stepperSteps"; "getRedirectPathOnCreationSuccess": "getRedirectPathOnCreationSuccess"; "redirectUrlOnClose": "redirectUrlOnClose"; "getSubtitle": "getSubtitle"; "isRouted": "isRouted"; "elementUuid": "elementUuid"; "initElement": "initElement"; "closeConfirmDialogData": "closeConfirmDialogData"; "onSuccess": "onSuccess"; }, {}, never, never, false, never>;
}

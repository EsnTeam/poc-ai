import { Component, Input, } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { EsnNotificationCriticalityEnum, NOTIFICATION_CRITICALITY_LABELS, } from '../model/notification';
import * as i0 from "@angular/core";
import * as i1 from "../notifications.service";
import * as i2 from "../notification-processing.service";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
import * as i5 from "../../button/button.component";
import * as i6 from "../../input/input";
import * as i7 from "../../select/select/select.component";
import * as i8 from "../../select/option/option.component";
import * as i9 from "../../checkbox/checkbox.component";
import * as i10 from "../notification-list/notification-list.component";
export class EsnNotificationCenter {
    constructor(notificationsService, processingService, elementRef, fb) {
        this.notificationsService = notificationsService;
        this.processingService = processingService;
        this.elementRef = elementRef;
        this.totalUnread = 0;
        this.totalNbNotifs = 0;
        this.refresh$ = new BehaviorSubject(false);
        this.markAllAsRead$ = new BehaviorSubject(false);
        this.criticalities = Object.keys(EsnNotificationCriticalityEnum);
        this.criticalityLabels = NOTIFICATION_CRITICALITY_LABELS;
        this.form = fb.group({
            criticality: [null, null],
            date: [null, null],
            unread: [null, null],
        });
        this.form.valueChanges.subscribe((val) => {
            this.refresh$.next(true);
        });
    }
    ngOnInit() {
        this.refresh$.next(true);
        this.notificationsService
            .getUnread()
            .subscribe((unread) => (this.totalUnread = unread));
        this.notificationsService
            .getTotal()
            .subscribe((total) => (this.totalNbNotifs = total));
    }
    get dateAtEndOfDay() {
        const date = this.form?.value?.date;
        if (!!date) {
            let endOfDayDate = new Date(date);
            endOfDayDate = new Date(endOfDayDate.getTime() + 24 * 3600 * 1000);
            return endOfDayDate;
        }
        return date;
    }
    markAllAsRead() {
        this.notificationsService.markAllAsRead();
        this.markAllAsRead$.next(true);
    }
}
EsnNotificationCenter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnNotificationCenter, deps: [{ token: i1.EsnNotificationsService }, { token: i2.EsnNotificationProcessingService }, { token: i0.ElementRef }, { token: i3.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
EsnNotificationCenter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: EsnNotificationCenter, selector: "esn-notification-center", inputs: { scrollElement: "scrollElement" }, host: { classAttribute: "esn-notification-center" }, ngImport: i0, template: "<div class=\"esn-notification-center-header\">\r\n  <div class=\"esn-notification-center-title\">Notifications</div>\r\n  <div class=\"esn-notification-center-subtitle\">Suivez les nouveaut\u00E9s dans votre centre de notifications</div>\r\n</div>\r\n<div class=\"esn-notification-center-action-bar\">\r\n  <div class=\"esn-notification-action-bar-form\" [formGroup]=\"form\">\r\n    <esn-datepicker formControlName=\"date\" label=\"Date\"></esn-datepicker>\r\n    <esn-select formControlName=\"criticality\" size=\"sm\" label=\"Criticit\u00E9\">\r\n      <esn-option *ngFor=\"let criticality of criticalities\" [value]=\"criticality\">{{criticalityLabels[criticality]}}</esn-option>\r\n    </esn-select>\r\n    <esn-checkbox formControlName=\"unread\" color=\"primary\">Uniquement les non-lus<span *ngIf=\"!!totalUnread\"> ({{totalUnread}})</span></esn-checkbox>\r\n  </div>\r\n  <esn-button\r\n    *ngIf=\"!this.form.value.date && (!this.form.value.criticality || this.form.value.criticality == 'NONE')\"\r\n    class=\"esn-notification-center-mark-all-as-read-btn\"\r\n    type=\"basic\"\r\n    color=\"primary\"\r\n    size=\"sm\"\r\n    (click)=\"markAllAsRead()\"\r\n    >Tout marquer comme lu</esn-button\r\n  >\r\n</div>\r\n<esn-notification-list\r\n  [unread]=\"form.value.unread\"\r\n  [dateBefore]=\"dateAtEndOfDay\"\r\n  [dateAfter]=\"form.value.date\"\r\n  [criticality]=\"form.value.criticality != 'NONE' ? form.value.criticality : null\"\r\n  [refreshSubject$]=\"refresh$\"\r\n  [scrollElement]=\"scrollElement\"\r\n  [markAllAsReadSubject$]=\"markAllAsRead$\"\r\n></esn-notification-list>\r\n", styles: [":host .esn-notification-center-header{margin-bottom:1.5rem}:host .esn-notification-center-header .esn-notification-center-title{margin-bottom:.375rem;font-size:2rem;margin:.67rem 0;font-weight:700}:host .esn-notification-center-action-bar{display:flex;justify-content:space-between}:host .esn-notification-center-action-bar .esn-notification-center-mark-all-as-read-btn{margin-right:1rem}:host .esn-notification-center-action-bar .esn-notification-action-bar-form{display:flex;align-items:center;flex-grow:1}:host .esn-notification-center-action-bar .esn-notification-action-bar-form :not(:last-child){margin-right:1rem}:host .esn-notification-center-action-bar .esn-notification-action-bar-form .esn-input,:host .esn-notification-center-action-bar .esn-notification-action-bar-form .esn-select{margin-bottom:0}:host .esn-notification-center-action-bar .esn-notification-action-bar-form .esn-input{margin-top:18px}:host .esn-notification-center-action-bar .esn-notification-action-bar-form .esn-select{margin-top:15px}\n"], dependencies: [{ kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: i5.EsnButton, selector: "esn-button", inputs: ["type", "size", "disabled", "round", "iconOnly", "color"], outputs: ["click"] }, { kind: "component", type: i6.EsnDatePicker, selector: "esn-datepicker" }, { kind: "component", type: i7.EsnSelect, selector: "esn-select", inputs: ["disabled", "disableRipple", "tabIndex", "appearance", "label", "placeholder", "required", "multiple", "hint", "error", "size", "theme"], outputs: ["focus", "blur", "selectionChange", "openedChange"] }, { kind: "component", type: i8.EsnOption, selector: "esn-option", inputs: ["value", "disabled"] }, { kind: "component", type: i9.EsnCheckboxComponent, selector: "esn-checkbox", inputs: ["id", "name", "value", "checked", "required", "disabled", "indeterminate", "disableRipple", "labelPosition", "color", "tabIndex"], outputs: ["change", "indeterminateChange"] }, { kind: "component", type: i10.EsnNotificationList, selector: "esn-notification-list", inputs: ["refreshSubject$", "scrollElement", "markAllAsReadSubject$", "unread", "dateBefore", "dateAfter", "criticality"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnNotificationCenter, decorators: [{
            type: Component,
            args: [{ selector: 'esn-notification-center', host: {
                        class: 'esn-notification-center',
                    }, template: "<div class=\"esn-notification-center-header\">\r\n  <div class=\"esn-notification-center-title\">Notifications</div>\r\n  <div class=\"esn-notification-center-subtitle\">Suivez les nouveaut\u00E9s dans votre centre de notifications</div>\r\n</div>\r\n<div class=\"esn-notification-center-action-bar\">\r\n  <div class=\"esn-notification-action-bar-form\" [formGroup]=\"form\">\r\n    <esn-datepicker formControlName=\"date\" label=\"Date\"></esn-datepicker>\r\n    <esn-select formControlName=\"criticality\" size=\"sm\" label=\"Criticit\u00E9\">\r\n      <esn-option *ngFor=\"let criticality of criticalities\" [value]=\"criticality\">{{criticalityLabels[criticality]}}</esn-option>\r\n    </esn-select>\r\n    <esn-checkbox formControlName=\"unread\" color=\"primary\">Uniquement les non-lus<span *ngIf=\"!!totalUnread\"> ({{totalUnread}})</span></esn-checkbox>\r\n  </div>\r\n  <esn-button\r\n    *ngIf=\"!this.form.value.date && (!this.form.value.criticality || this.form.value.criticality == 'NONE')\"\r\n    class=\"esn-notification-center-mark-all-as-read-btn\"\r\n    type=\"basic\"\r\n    color=\"primary\"\r\n    size=\"sm\"\r\n    (click)=\"markAllAsRead()\"\r\n    >Tout marquer comme lu</esn-button\r\n  >\r\n</div>\r\n<esn-notification-list\r\n  [unread]=\"form.value.unread\"\r\n  [dateBefore]=\"dateAtEndOfDay\"\r\n  [dateAfter]=\"form.value.date\"\r\n  [criticality]=\"form.value.criticality != 'NONE' ? form.value.criticality : null\"\r\n  [refreshSubject$]=\"refresh$\"\r\n  [scrollElement]=\"scrollElement\"\r\n  [markAllAsReadSubject$]=\"markAllAsRead$\"\r\n></esn-notification-list>\r\n", styles: [":host .esn-notification-center-header{margin-bottom:1.5rem}:host .esn-notification-center-header .esn-notification-center-title{margin-bottom:.375rem;font-size:2rem;margin:.67rem 0;font-weight:700}:host .esn-notification-center-action-bar{display:flex;justify-content:space-between}:host .esn-notification-center-action-bar .esn-notification-center-mark-all-as-read-btn{margin-right:1rem}:host .esn-notification-center-action-bar .esn-notification-action-bar-form{display:flex;align-items:center;flex-grow:1}:host .esn-notification-center-action-bar .esn-notification-action-bar-form :not(:last-child){margin-right:1rem}:host .esn-notification-center-action-bar .esn-notification-action-bar-form .esn-input,:host .esn-notification-center-action-bar .esn-notification-action-bar-form .esn-select{margin-bottom:0}:host .esn-notification-center-action-bar .esn-notification-action-bar-form .esn-input{margin-top:18px}:host .esn-notification-center-action-bar .esn-notification-action-bar-form .esn-select{margin-top:15px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.EsnNotificationsService }, { type: i2.EsnNotificationProcessingService }, { type: i0.ElementRef }, { type: i3.FormBuilder }]; }, propDecorators: { scrollElement: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/progress-spinner";
export class EsnLoader {
    constructor() {
        this.type = 'spinner';
        this.centered = false;
        this.size = 'sm';
        this._sizesInPx = { sm: 32, md: 56, lg: 60 };
    }
}
EsnLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });
EsnLoader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: EsnLoader, selector: "esn-loader", inputs: { type: "type", centered: "centered", size: "size" }, host: { properties: { "class.esn-loader-sm": "size === 'sm'", "class.esn-loader-md": "size === 'md'", "class.esn-loader-lg": "size === 'lg'", "class.esn-loader-centered": "centered || null" }, classAttribute: "esn-loader" }, ngImport: i0, template: "<!-- <mat-spinner *ngIf=\"type === 'spinner'; else square\"\r\n  class=\"loader-spinner\"\r\n  [ngClass]=\"{ 'position-center': center }\"\r\n             [diameter]=\"_sizesInPx[size] \"\r\n></mat-spinner>\r\n\r\n<ng-template #square>\r\n  <span class=\"loader-square {{size}}\" [ngClass]=\"{ 'position-center': center }\"></span>\r\n</ng-template> -->\r\n\r\n<mat-spinner *ngIf=\"type === 'spinner'\" class=\"esn-loader__spinner\" [diameter]=\"_sizesInPx[size] \"></mat-spinner>\r\n\r\n<div *ngIf=\"type === 'square'\" class=\"esn-loader__square\"></div>\r\n", styles: [":host{display:inline-block}:host.esn-loader-sm{height:2rem;width:2rem}:host.esn-loader-md{height:3.5rem;width:3.5rem}:host.esn-loader-lg{height:5rem;width:5rem}:host.esn-loader-centered{display:block;margin:3rem auto}:host.esn-loader .esn-loader__square{display:flex;position:relative;height:100%;width:100%;transform:rotateX(65deg) rotate(45deg);animation:layers1 1s linear infinite alternate}:host.esn-loader .esn-loader__square:after{content:\"\";position:absolute;inset:0;animation:layerTr 1s linear infinite alternate}:host.esn-loader .esn-loader__spinner{display:flex;position:relative}@keyframes layers1{0%{box-shadow:0 0}90%,to{box-shadow:20px 20px 0 -4px}}@keyframes layerTr{0%{transform:translate(0) scale(1)}to{transform:translate(-25px,-25px) scale(1)}}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatProgressSpinner, selector: "mat-progress-spinner, mat-spinner", inputs: ["color", "mode", "value", "diameter", "strokeWidth"], exportAs: ["matProgressSpinner"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnLoader, decorators: [{
            type: Component,
            args: [{ selector: 'esn-loader', host: {
                        class: 'esn-loader',
                        '[class.esn-loader-sm]': `size === 'sm'`,
                        '[class.esn-loader-md]': `size === 'md'`,
                        '[class.esn-loader-lg]': `size === 'lg'`,
                        '[class.esn-loader-centered]': `centered || null`,
                    }, template: "<!-- <mat-spinner *ngIf=\"type === 'spinner'; else square\"\r\n  class=\"loader-spinner\"\r\n  [ngClass]=\"{ 'position-center': center }\"\r\n             [diameter]=\"_sizesInPx[size] \"\r\n></mat-spinner>\r\n\r\n<ng-template #square>\r\n  <span class=\"loader-square {{size}}\" [ngClass]=\"{ 'position-center': center }\"></span>\r\n</ng-template> -->\r\n\r\n<mat-spinner *ngIf=\"type === 'spinner'\" class=\"esn-loader__spinner\" [diameter]=\"_sizesInPx[size] \"></mat-spinner>\r\n\r\n<div *ngIf=\"type === 'square'\" class=\"esn-loader__square\"></div>\r\n", styles: [":host{display:inline-block}:host.esn-loader-sm{height:2rem;width:2rem}:host.esn-loader-md{height:3.5rem;width:3.5rem}:host.esn-loader-lg{height:5rem;width:5rem}:host.esn-loader-centered{display:block;margin:3rem auto}:host.esn-loader .esn-loader__square{display:flex;position:relative;height:100%;width:100%;transform:rotateX(65deg) rotate(45deg);animation:layers1 1s linear infinite alternate}:host.esn-loader .esn-loader__square:after{content:\"\";position:absolute;inset:0;animation:layerTr 1s linear infinite alternate}:host.esn-loader .esn-loader__spinner{display:flex;position:relative}@keyframes layers1{0%{box-shadow:0 0}90%,to{box-shadow:20px 20px 0 -4px}}@keyframes layerTr{0%{transform:translate(0) scale(1)}to{transform:translate(-25px,-25px) scale(1)}}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { type: [{
                type: Input
            }], centered: [{
                type: Input
            }], size: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Fyb20tZG9tYWluLWlwbm4tYzkwLWRlc2lnbi1saWIvc3JjL2xpYi9jb21wb25lbnRzL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYXJvbS1kb21haW4taXBubi1jOTAtZGVzaWduLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvbG9hZGVyL2xvYWRlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQWVqRCxNQUFNLE9BQU8sU0FBUztJQU9wQjtRQU5TLFNBQUksR0FBeUIsU0FBUyxDQUFDO1FBQ3ZDLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsU0FBSSxHQUF1QixJQUFJLENBQUM7UUFFekMsZUFBVSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUV6QixDQUFDOzt1R0FQTCxTQUFTOzJGQUFULFNBQVMsaVZDZnRCLGtqQkFhQTs0RkRFYSxTQUFTO2tCQWJyQixTQUFTOytCQUNFLFlBQVksUUFHaEI7d0JBQ0osS0FBSyxFQUFFLFlBQVk7d0JBQ25CLHVCQUF1QixFQUFFLGVBQWU7d0JBQ3hDLHVCQUF1QixFQUFFLGVBQWU7d0JBQ3hDLHVCQUF1QixFQUFFLGVBQWU7d0JBQ3hDLDZCQUE2QixFQUFFLGtCQUFrQjtxQkFDbEQ7MEVBSVEsSUFBSTtzQkFBWixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdlc24tbG9hZGVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbG9hZGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9sb2FkZXIuY29tcG9uZW50LnNjc3MnXSxcclxuICBob3N0OiB7XHJcbiAgICBjbGFzczogJ2Vzbi1sb2FkZXInLFxyXG4gICAgJ1tjbGFzcy5lc24tbG9hZGVyLXNtXSc6IGBzaXplID09PSAnc20nYCxcclxuICAgICdbY2xhc3MuZXNuLWxvYWRlci1tZF0nOiBgc2l6ZSA9PT0gJ21kJ2AsXHJcbiAgICAnW2NsYXNzLmVzbi1sb2FkZXItbGddJzogYHNpemUgPT09ICdsZydgLFxyXG4gICAgJ1tjbGFzcy5lc24tbG9hZGVyLWNlbnRlcmVkXSc6IGBjZW50ZXJlZCB8fCBudWxsYCxcclxuICB9XHJcblxyXG59KVxyXG5leHBvcnQgY2xhc3MgRXNuTG9hZGVyIHtcclxuICBASW5wdXQoKSB0eXBlOiAnc3Bpbm5lcicgfCAnc3F1YXJlJyA9ICdzcGlubmVyJztcclxuICBASW5wdXQoKSBjZW50ZXJlZCA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIHNpemU6ICdzbScgfCAnbWQnIHwgJ2xnJyA9ICdzbSc7XHJcblxyXG4gIF9zaXplc0luUHggPSB7IHNtOiAzMiwgbWQ6IDU2LCBsZzogNjAgfTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7fVxyXG59XHJcbiIsIjwhLS0gPG1hdC1zcGlubmVyICpuZ0lmPVwidHlwZSA9PT0gJ3NwaW5uZXInOyBlbHNlIHNxdWFyZVwiXHJcbiAgY2xhc3M9XCJsb2FkZXItc3Bpbm5lclwiXHJcbiAgW25nQ2xhc3NdPVwieyAncG9zaXRpb24tY2VudGVyJzogY2VudGVyIH1cIlxyXG4gICAgICAgICAgICAgW2RpYW1ldGVyXT1cIl9zaXplc0luUHhbc2l6ZV0gXCJcclxuPjwvbWF0LXNwaW5uZXI+XHJcblxyXG48bmctdGVtcGxhdGUgI3NxdWFyZT5cclxuICA8c3BhbiBjbGFzcz1cImxvYWRlci1zcXVhcmUge3tzaXplfX1cIiBbbmdDbGFzc109XCJ7ICdwb3NpdGlvbi1jZW50ZXInOiBjZW50ZXIgfVwiPjwvc3Bhbj5cclxuPC9uZy10ZW1wbGF0ZT4gLS0+XHJcblxyXG48bWF0LXNwaW5uZXIgKm5nSWY9XCJ0eXBlID09PSAnc3Bpbm5lcidcIiBjbGFzcz1cImVzbi1sb2FkZXJfX3NwaW5uZXJcIiBbZGlhbWV0ZXJdPVwiX3NpemVzSW5QeFtzaXplXSBcIj48L21hdC1zcGlubmVyPlxyXG5cclxuPGRpdiAqbmdJZj1cInR5cGUgPT09ICdzcXVhcmUnXCIgY2xhc3M9XCJlc24tbG9hZGVyX19zcXVhcmVcIj48L2Rpdj5cclxuIl19
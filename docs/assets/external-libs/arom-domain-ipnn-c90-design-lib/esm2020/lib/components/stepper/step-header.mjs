import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, } from '@angular/core';
import { EsnStepLabel } from './step-label';
import { CdkStepHeader } from '@angular/cdk/stepper';
import { mixinColor } from '@angular/material/core';
import * as i0 from "@angular/core";
import * as i1 from "./stepper-intl";
import * as i2 from "@angular/cdk/a11y";
import * as i3 from "@angular/common";
import * as i4 from "@angular/material/core";
import * as i5 from "../icon/icon.component";
// Boilerplate for applying mixins to EsnStepHeader.
/** @docs-private */
const _EsnStepHeaderBase = mixinColor(class EsnStepHeaderBase extends CdkStepHeader {
    constructor(elementRef) {
        super(elementRef);
    }
}, 'primary');
export class EsnStepHeader extends _EsnStepHeaderBase {
    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {
        super(_elementRef);
        this._intl = _intl;
        this._focusMonitor = _focusMonitor;
        /** Mobile mode flag */
        this.isMobile = false;
        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());
    }
    ngAfterViewInit() {
        this._focusMonitor.monitor(this._elementRef, true);
    }
    ngOnDestroy() {
        this._intlSubscription.unsubscribe();
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
    /** Focuses the step header. */
    focus(origin, options) {
        if (origin) {
            this._focusMonitor.focusVia(this._elementRef, origin, options);
        }
        else {
            this._elementRef.nativeElement.focus(options);
        }
    }
    /** Returns string label of given step if it is a text label. */
    _stringLabel() {
        return this.label instanceof EsnStepLabel ? null : this.label;
    }
    /** Returns EsnStepLabel if the label of given step is a template label. */
    _templateLabel() {
        return this.label instanceof EsnStepLabel ? this.label : null;
    }
    /** Returns the host HTML element. */
    _getHostElement() {
        return this._elementRef.nativeElement;
    }
    /** Template context variables that are exposed to the `esnStepperIcon` instances. */
    _getIconContext() {
        return {
            index: this.index,
            active: this.active,
            optional: this.optional,
        };
    }
    _getDefaultTextForState(state, icon) {
        if (!icon && state == 'number' || state == 'edit') {
            return `${this.index + 1}`;
        }
        if (!!icon) {
            return icon;
        }
        // if (state == 'edit') {
        //   return 'edit-2';
        // }
        if (state == 'error') {
            return 'warning';
        }
        return state;
    }
}
EsnStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnStepHeader, deps: [{ token: i1.EsnStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
EsnStepHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: EsnStepHeader, selector: "esn-step-header", inputs: { state: "state", label: "label", errorMessage: "errorMessage", iconOverrides: "iconOverrides", index: "index", selected: "selected", active: "active", optional: "optional", disableRipple: "disableRipple", esnIcon: "esnIcon", isMobile: "isMobile", stepsNumber: "stepsNumber" }, host: { attributes: { "role": "tab" }, classAttribute: "esn-step-header" }, usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"!isMobile; else mobileVersion\">\r\n  <div class=\"esn-step-header-ripple esn-focus-indicator\" matRipple\r\n       [matRippleDisabled]=\"disableRipple\"></div>\r\n\r\n  <div class=\"esn-step-icon-state-{{state}} esn-step-icon\" [class.esn-step-icon-selected]=\"selected\">\r\n    <div class=\"esn-step-icon-content\" [ngSwitch]=\"!!(iconOverrides && iconOverrides[state])\">\r\n      <ng-container\r\n        *ngSwitchCase=\"true\"\r\n        [ngTemplateOutlet]=\"iconOverrides[state]\"\r\n        [ngTemplateOutletContext]=\"_getIconContext()\"></ng-container>\r\n      <ng-container *ngSwitchDefault [ngSwitch]=\"state\">\r\n        <ng-container *ngIf=\"!esnIcon\">\r\n          <span aria-hidden=\"true\" *ngSwitchCase=\"'number'\">{{_getDefaultTextForState(state, esnIcon)}}</span>\r\n          <span aria-hidden=\"true\" *ngSwitchCase=\"'edit'\">{{_getDefaultTextForState(state, esnIcon)}}</span>\r\n        </ng-container>\r\n        <span class=\"cdk-visually-hidden\" *ngIf=\"state === 'done'\">{{_intl.completedLabel}}</span>\r\n        <span class=\"cdk-visually-hidden\" *ngIf=\"state === 'edit'\">{{_intl.editableLabel}}</span>\r\n        <esn-icon [name]=\"esnIcon || _getDefaultTextForState(state, esnIcon)\" aria-hidden=\"true\" *ngSwitchDefault></esn-icon>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"esn-step-label\"\r\n       [class.esn-step-label-active]=\"active\"\r\n       [class.esn-step-label-selected]=\"selected\"\r\n       [class.esn-step-label-error]=\"state == 'error'\">\r\n    <!-- If there is a label template, use it. -->\r\n    <div class=\"esn-step-text-label\" *ngIf=\"_templateLabel()\">\r\n      <ng-container [ngTemplateOutlet]=\"_templateLabel()!.template\"></ng-container>\r\n    </div>\r\n    <!-- If there is no label template, fall back to the text label. -->\r\n    <div class=\"esn-step-text-label\" *ngIf=\"_stringLabel()\">{{label}}</div>\r\n    <div class=\"esn-step-optional\" *ngIf=\"optional && state != 'error'\">{{_intl.optionalLabel}}</div>\r\n    <div class=\"esn-step-sub-label-error\" *ngIf=\"state == 'error'\">{{errorMessage}}</div>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #mobileVersion>\r\n\r\n  <div class=\"esn-step-header-ripple esn-focus-indicator\" matRipple\r\n       [matRippleDisabled]=\"disableRipple\"></div>\r\n\r\n  <div class=\"esn-step-icon-state-{{state}} esn-step-icon\" [class.esn-step-icon-selected]=\"selected\">\r\n    <div class=\"esn-step-icon-content\" [ngSwitch]=\"!!(iconOverrides && iconOverrides[state])\">\r\n      <ng-container\r\n        *ngSwitchCase=\"true\"\r\n        [ngTemplateOutlet]=\"iconOverrides[state]\"\r\n        [ngTemplateOutletContext]=\"_getIconContext()\"></ng-container>\r\n      <ng-container *ngSwitchDefault [ngSwitch]=\"state\">\r\n        <ng-container *ngIf=\"!esnIcon\">\r\n          <span aria-hidden=\"true\" *ngSwitchCase=\"'number'\">{{_getDefaultTextForState(state, esnIcon)}}</span>\r\n          <span aria-hidden=\"true\" *ngSwitchCase=\"'edit'\">{{_getDefaultTextForState(state, esnIcon)}}</span>\r\n        </ng-container>\r\n        <span class=\"cdk-visually-hidden\" *ngIf=\"state === 'done'\">{{_intl.completedLabel}}</span>\r\n        <span class=\"cdk-visually-hidden\" *ngIf=\"state === 'edit'\">{{_intl.editableLabel}}</span>\r\n        <esn-icon [name]=\"esnIcon || _getDefaultTextForState(state, esnIcon)\" aria-hidden=\"true\" *ngSwitchDefault></esn-icon>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"esn-step-label\"\r\n       [class.esn-step-label-active]=\"active\"\r\n       [class.esn-step-label-selected]=\"selected\"\r\n       [class.esn-step-label-error]=\"state == 'error'\">\r\n    <div class=\"esn-step-optional\"> \u00C9TAPE {{index + 1}} / {{stepsNumber}}</div>\r\n    <!-- If there is a label template, use it. -->\r\n    <div class=\"esn-step-text-label\" *ngIf=\"_templateLabel()\">\r\n      <ng-container [ngTemplateOutlet]=\"_templateLabel()!.template\"></ng-container>\r\n    </div>\r\n    <!-- If there is no label template, fall back to the text label. -->\r\n    <div class=\"esn-step-text-label\" *ngIf=\"_stringLabel()\">{{label}}</div>\r\n    <div class=\"esn-step-optional\" *ngIf=\"optional && state != 'error'\">{{_intl.optionalLabel}}</div>\r\n    <div class=\"esn-step-sub-label-error\" *ngIf=\"state == 'error'\">{{errorMessage}}</div>\r\n  </div></ng-template>\r\n", styles: [".esn-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.esn-step-header:focus .esn-focus-indicator:before{content:\"\"}.cdk-high-contrast-active .esn-step-header{outline:solid 1px}.cdk-high-contrast-active .esn-step-header[aria-selected=true] .esn-step-label{text-decoration:underline}.cdk-high-contrast-active .esn-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .esn-step-header[aria-disabled=true] .esn-step-label,.cdk-high-contrast-active .esn-step-header[aria-disabled=true] .esn-step-icon,.cdk-high-contrast-active .esn-step-header[aria-disabled=true] .esn-step-optional{color:GrayText}.esn-step-header esn-icon svg{display:block;margin:auto}.esn-step-optional,.esn-step-sub-label-error{font-size:12px}.esn-step-icon{border-radius:50%;height:44px;width:44px;flex-shrink:0;position:relative}.esn-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);display:flex}.esn-step-icon esn-icon{font-size:16px;height:16px;width:16px}.esn-step-icon-state-error esn-icon{font-size:24px;height:24px;width:24px}.esn-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.esn-step-text-label{text-overflow:ellipsis;overflow:hidden}.esn-step-header .esn-step-header-ripple{inset:0;position:absolute;pointer-events:none}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i3.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i3.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i3.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "directive", type: i4.MatRipple, selector: "[mat-ripple], [matRipple]", inputs: ["matRippleColor", "matRippleUnbounded", "matRippleCentered", "matRippleRadius", "matRippleAnimation", "matRippleDisabled", "matRippleTrigger"], exportAs: ["matRipple"] }, { kind: "component", type: i5.EsnIcon, selector: "esn-icon", inputs: ["name", "boxed", "size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnStepHeader, decorators: [{
            type: Component,
            args: [{ selector: 'esn-step-header', host: {
                        'class': 'esn-step-header',
                        'role': 'tab',
                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"!isMobile; else mobileVersion\">\r\n  <div class=\"esn-step-header-ripple esn-focus-indicator\" matRipple\r\n       [matRippleDisabled]=\"disableRipple\"></div>\r\n\r\n  <div class=\"esn-step-icon-state-{{state}} esn-step-icon\" [class.esn-step-icon-selected]=\"selected\">\r\n    <div class=\"esn-step-icon-content\" [ngSwitch]=\"!!(iconOverrides && iconOverrides[state])\">\r\n      <ng-container\r\n        *ngSwitchCase=\"true\"\r\n        [ngTemplateOutlet]=\"iconOverrides[state]\"\r\n        [ngTemplateOutletContext]=\"_getIconContext()\"></ng-container>\r\n      <ng-container *ngSwitchDefault [ngSwitch]=\"state\">\r\n        <ng-container *ngIf=\"!esnIcon\">\r\n          <span aria-hidden=\"true\" *ngSwitchCase=\"'number'\">{{_getDefaultTextForState(state, esnIcon)}}</span>\r\n          <span aria-hidden=\"true\" *ngSwitchCase=\"'edit'\">{{_getDefaultTextForState(state, esnIcon)}}</span>\r\n        </ng-container>\r\n        <span class=\"cdk-visually-hidden\" *ngIf=\"state === 'done'\">{{_intl.completedLabel}}</span>\r\n        <span class=\"cdk-visually-hidden\" *ngIf=\"state === 'edit'\">{{_intl.editableLabel}}</span>\r\n        <esn-icon [name]=\"esnIcon || _getDefaultTextForState(state, esnIcon)\" aria-hidden=\"true\" *ngSwitchDefault></esn-icon>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"esn-step-label\"\r\n       [class.esn-step-label-active]=\"active\"\r\n       [class.esn-step-label-selected]=\"selected\"\r\n       [class.esn-step-label-error]=\"state == 'error'\">\r\n    <!-- If there is a label template, use it. -->\r\n    <div class=\"esn-step-text-label\" *ngIf=\"_templateLabel()\">\r\n      <ng-container [ngTemplateOutlet]=\"_templateLabel()!.template\"></ng-container>\r\n    </div>\r\n    <!-- If there is no label template, fall back to the text label. -->\r\n    <div class=\"esn-step-text-label\" *ngIf=\"_stringLabel()\">{{label}}</div>\r\n    <div class=\"esn-step-optional\" *ngIf=\"optional && state != 'error'\">{{_intl.optionalLabel}}</div>\r\n    <div class=\"esn-step-sub-label-error\" *ngIf=\"state == 'error'\">{{errorMessage}}</div>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #mobileVersion>\r\n\r\n  <div class=\"esn-step-header-ripple esn-focus-indicator\" matRipple\r\n       [matRippleDisabled]=\"disableRipple\"></div>\r\n\r\n  <div class=\"esn-step-icon-state-{{state}} esn-step-icon\" [class.esn-step-icon-selected]=\"selected\">\r\n    <div class=\"esn-step-icon-content\" [ngSwitch]=\"!!(iconOverrides && iconOverrides[state])\">\r\n      <ng-container\r\n        *ngSwitchCase=\"true\"\r\n        [ngTemplateOutlet]=\"iconOverrides[state]\"\r\n        [ngTemplateOutletContext]=\"_getIconContext()\"></ng-container>\r\n      <ng-container *ngSwitchDefault [ngSwitch]=\"state\">\r\n        <ng-container *ngIf=\"!esnIcon\">\r\n          <span aria-hidden=\"true\" *ngSwitchCase=\"'number'\">{{_getDefaultTextForState(state, esnIcon)}}</span>\r\n          <span aria-hidden=\"true\" *ngSwitchCase=\"'edit'\">{{_getDefaultTextForState(state, esnIcon)}}</span>\r\n        </ng-container>\r\n        <span class=\"cdk-visually-hidden\" *ngIf=\"state === 'done'\">{{_intl.completedLabel}}</span>\r\n        <span class=\"cdk-visually-hidden\" *ngIf=\"state === 'edit'\">{{_intl.editableLabel}}</span>\r\n        <esn-icon [name]=\"esnIcon || _getDefaultTextForState(state, esnIcon)\" aria-hidden=\"true\" *ngSwitchDefault></esn-icon>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"esn-step-label\"\r\n       [class.esn-step-label-active]=\"active\"\r\n       [class.esn-step-label-selected]=\"selected\"\r\n       [class.esn-step-label-error]=\"state == 'error'\">\r\n    <div class=\"esn-step-optional\"> \u00C9TAPE {{index + 1}} / {{stepsNumber}}</div>\r\n    <!-- If there is a label template, use it. -->\r\n    <div class=\"esn-step-text-label\" *ngIf=\"_templateLabel()\">\r\n      <ng-container [ngTemplateOutlet]=\"_templateLabel()!.template\"></ng-container>\r\n    </div>\r\n    <!-- If there is no label template, fall back to the text label. -->\r\n    <div class=\"esn-step-text-label\" *ngIf=\"_stringLabel()\">{{label}}</div>\r\n    <div class=\"esn-step-optional\" *ngIf=\"optional && state != 'error'\">{{_intl.optionalLabel}}</div>\r\n    <div class=\"esn-step-sub-label-error\" *ngIf=\"state == 'error'\">{{errorMessage}}</div>\r\n  </div></ng-template>\r\n", styles: [".esn-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.esn-step-header:focus .esn-focus-indicator:before{content:\"\"}.cdk-high-contrast-active .esn-step-header{outline:solid 1px}.cdk-high-contrast-active .esn-step-header[aria-selected=true] .esn-step-label{text-decoration:underline}.cdk-high-contrast-active .esn-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .esn-step-header[aria-disabled=true] .esn-step-label,.cdk-high-contrast-active .esn-step-header[aria-disabled=true] .esn-step-icon,.cdk-high-contrast-active .esn-step-header[aria-disabled=true] .esn-step-optional{color:GrayText}.esn-step-header esn-icon svg{display:block;margin:auto}.esn-step-optional,.esn-step-sub-label-error{font-size:12px}.esn-step-icon{border-radius:50%;height:44px;width:44px;flex-shrink:0;position:relative}.esn-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);display:flex}.esn-step-icon esn-icon{font-size:16px;height:16px;width:16px}.esn-step-icon-state-error esn-icon{font-size:24px;height:24px;width:24px}.esn-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.esn-step-text-label{text-overflow:ellipsis;overflow:hidden}.esn-step-header .esn-step-header-ripple{inset:0;position:absolute;pointer-events:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.EsnStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { state: [{
                type: Input
            }], label: [{
                type: Input
            }], errorMessage: [{
                type: Input
            }], iconOverrides: [{
                type: Input
            }], index: [{
                type: Input
            }], selected: [{
                type: Input
            }], active: [{
                type: Input
            }], optional: [{
                type: Input
            }], disableRipple: [{
                type: Input
            }], esnIcon: [{
                type: Input
            }], isMobile: [{
                type: Input
            }], stepsNumber: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC1oZWFkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hcm9tLWRvbWFpbi1pcG5uLWM5MC1kZXNpZ24tbGliL3NyYy9saWIvY29tcG9uZW50cy9zdGVwcGVyL3N0ZXAtaGVhZGVyLnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYXJvbS1kb21haW4taXBubi1jOTAtZGVzaWduLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvc3RlcHBlci9zdGVwLWhlYWRlci5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNBLE9BQU8sRUFDTCx1QkFBdUIsRUFFdkIsU0FBUyxFQUVULEtBQUssRUFFTCxpQkFBaUIsR0FHbEIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUcxQyxPQUFPLEVBQUMsYUFBYSxFQUFZLE1BQU0sc0JBQXNCLENBQUM7QUFDOUQsT0FBTyxFQUFDLFVBQVUsRUFBVyxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7O0FBRzVELG9EQUFvRDtBQUNwRCxvQkFBb0I7QUFDcEIsTUFBTSxrQkFBa0IsR0FBRyxVQUFVLENBQ25DLE1BQU0saUJBQWtCLFNBQVEsYUFBYTtJQUMzQyxZQUFZLFVBQXNCO1FBQ2hDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNwQixDQUFDO0NBQ0YsRUFDRCxTQUFTLENBQ1YsQ0FBQztBQWFGLE1BQU0sT0FBTyxhQUNYLFNBQVEsa0JBQWtCO0lBeUMxQixZQUNTLEtBQXFCLEVBQ3BCLGFBQTJCLEVBQ25DLFdBQW9DLEVBQ3BDLGlCQUFvQztRQUVwQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7UUFMWixVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQUNwQixrQkFBYSxHQUFiLGFBQWEsQ0FBYztRQVJyQyx1QkFBdUI7UUFDZCxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBWXhCLElBQUksQ0FBQyxpQkFB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LCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7Rm9jdXNNb25pdG9yLCBGb2N1c09yaWdpbn0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xyXG5pbXBvcnQge1xyXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxyXG4gIENoYW5nZURldGVjdG9yUmVmLFxyXG4gIENvbXBvbmVudCxcclxuICBFbGVtZW50UmVmLFxyXG4gIElucHV0LFxyXG4gIE9uRGVzdHJveSxcclxuICBWaWV3RW5jYXBzdWxhdGlvbixcclxuICBUZW1wbGF0ZVJlZixcclxuICBBZnRlclZpZXdJbml0LFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1N1YnNjcmlwdGlvbn0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7RXNuU3RlcExhYmVsfSBmcm9tICcuL3N0ZXAtbGFiZWwnO1xyXG5pbXBvcnQge0VzblN0ZXBwZXJJbnRsfSBmcm9tICcuL3N0ZXBwZXItaW50bCc7XHJcbmltcG9ydCB7RXNuU3RlcHBlckljb25Db250ZXh0fSBmcm9tICcuL3N0ZXBwZXItaWNvbic7XHJcbmltcG9ydCB7Q2RrU3RlcEhlYWRlciwgU3RlcFN0YXRlfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XHJcbmltcG9ydCB7bWl4aW5Db2xvciwgQ2FuQ29sb3J9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xyXG5pbXBvcnQge0Vzbkljb25OYW1lfSBmcm9tIFwiLi4vaWNvbi9pY29uc1wiO1xyXG5cclxuLy8gQm9pbGVycGxhdGUgZm9yIGFwcGx5aW5nIG1peGlucyB0byBFc25TdGVwSGVhZGVyLlxyXG4vKiogQGRvY3MtcHJpdmF0ZSAqL1xyXG5jb25zdCBfRXNuU3RlcEhlYWRlckJhc2UgPSBtaXhpbkNvbG9yKFxyXG4gIGNsYXNzIEVzblN0ZXBIZWFkZXJCYXNlIGV4dGVuZHMgQ2RrU3RlcEhlYWRlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICAgIHN1cGVyKGVsZW1lbnRSZWYpO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgJ3ByaW1hcnknLFxyXG4pO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdlc24tc3RlcC1oZWFkZXInLFxyXG4gIHRlbXBsYXRlVXJsOiAnc3RlcC1oZWFkZXIuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJ3N0ZXAtaGVhZGVyLnNjc3MnXSxcclxuICBob3N0OiB7XHJcbiAgICAnY2xhc3MnOiAnZXNuLXN0ZXAtaGVhZGVyJyxcclxuICAgICdyb2xlJzogJ3RhYicsXHJcbiAgfSxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRXNuU3RlcEhlYWRlclxyXG4gIGV4dGVuZHMgX0VzblN0ZXBIZWFkZXJCYXNlXHJcbiAgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3ksIENhbkNvbG9yXHJcbntcclxuICBwcml2YXRlIF9pbnRsU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XHJcblxyXG4gIC8qKiBTdGF0ZSBvZiB0aGUgZ2l2ZW4gc3RlcC4gKi9cclxuICBASW5wdXQoKSBzdGF0ZTogU3RlcFN0YXRlO1xyXG5cclxuICAvKiogTGFiZWwgb2YgdGhlIGdpdmVuIHN0ZXAuICovXHJcbiAgQElucHV0KCkgbGFiZWw6IEVzblN0ZXBMYWJlbCB8IHN0cmluZztcclxuXHJcbiAgLyoqIEVycm9yIG1lc3NhZ2UgdG8gZGlzcGxheSB3aGVuIHRoZXJlJ3MgYW4gZXJyb3IuICovXHJcbiAgQElucHV0KCkgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBPdmVycmlkZXMgZm9yIHRoZSBoZWFkZXIgaWNvbnMsIHBhc3NlZCBpbiB2aWEgdGhlIHN0ZXBwZXIuICovXHJcbiAgQElucHV0KCkgaWNvbk92ZXJyaWRlczoge1trZXk6IHN0cmluZ106IFRlbXBsYXRlUmVmPEVzblN0ZXBwZXJJY29uQ29udGV4dD59O1xyXG5cclxuICAvKiogSW5kZXggb2YgdGhlIGdpdmVuIHN0ZXAuICovXHJcbiAgQElucHV0KCkgaW5kZXg6IG51bWJlcjtcclxuXHJcbiAgLyoqIFdoZXRoZXIgdGhlIGdpdmVuIHN0ZXAgaXMgc2VsZWN0ZWQuICovXHJcbiAgQElucHV0KCkgc2VsZWN0ZWQ6IGJvb2xlYW47XHJcblxyXG4gIC8qKiBXaGV0aGVyIHRoZSBnaXZlbiBzdGVwIGxhYmVsIGlzIGFjdGl2ZS4gKi9cclxuICBASW5wdXQoKSBhY3RpdmU6IGJvb2xlYW47XHJcblxyXG4gIC8qKiBXaGV0aGVyIHRoZSBnaXZlbiBzdGVwIGlzIG9wdGlvbmFsLiAqL1xyXG4gIEBJbnB1dCgpIG9wdGlvbmFsOiBib29sZWFuO1xyXG5cclxuICAvKiogV2hldGhlciB0aGUgcmlwcGxlIHNob3VsZCBiZSBkaXNhYmxlZC4gKi9cclxuICBASW5wdXQoKSBkaXNhYmxlUmlwcGxlOiBib29sZWFuO1xyXG5cclxuICAvKiogQ3VzdG9taXplZCBlc24gaWNvbiAqL1xyXG4gIEBJbnB1dCgpIGVzbkljb246IEVzbkljb25OYW1lO1xyXG5cclxuICAvKiogTW9iaWxlIG1vZGUgZmxhZyAqL1xyXG4gIEBJbnB1dCgpIGlzTW9iaWxlID0gZmFsc2U7XHJcblxyXG4gIC8qKiBudW1iZXIgb2Ygc3RlcHMgb2YgdGhlIGdpdmVuIHN0ZXAuICovXHJcbiAgQElucHV0KCkgc3RlcHNOdW1iZXI6IG51bWJlciB8IHVuZGVmaW5lZDtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwdWJsaWMgX2ludGw6IEVzblN0ZXBwZXJJbnRsLFxyXG4gICAgcHJpdmF0ZSBfZm9jdXNNb25pdG9yOiBGb2N1c01vbml0b3IsXHJcbiAgICBfZWxlbWVudFJlZjogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sXHJcbiAgICBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsXHJcbiAgKSB7XHJcbiAgICBzdXBlcihfZWxlbWVudFJlZik7XHJcbiAgICB0aGlzLl9pbnRsU3Vic2NyaXB0aW9uID0gX2ludGwuY2hhbmdlcy5zdWJzY3JpYmUoKCkgPT4gY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCkpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgdGhpcy5fZm9jdXNNb25pdG9yLm1vbml0b3IodGhpcy5fZWxlbWVudFJlZiwgdHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMuX2ludGxTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICAgIHRoaXMuX2ZvY3VzTW9uaXRvci5zdG9wTW9uaXRvcmluZyh0aGlzLl9lbGVtZW50UmVmKTtcclxuICB9XHJcblxyXG4gIC8qKiBGb2N1c2VzIHRoZSBzdGVwIGhlYWRlci4gKi9cclxuICBvdmVycmlkZSBmb2N1cyhvcmlnaW4/OiBGb2N1c09yaWdpbiwgb3B0aW9ucz86IEZvY3VzT3B0aW9ucykge1xyXG4gICAgaWYgKG9yaWdpbikge1xyXG4gICAgICB0aGlzLl9mb2N1c01vbml0b3IuZm9jdXNWaWEodGhpcy5fZWxlbWVudFJlZiwgb3JpZ2luLCBvcHRpb25zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5mb2N1cyhvcHRpb25zKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKiBSZXR1cm5zIHN0cmluZyBsYWJlbCBvZiBnaXZlbiBzdGVwIGlmIGl0IGlzIGEgdGV4dCBsYWJlbC4gKi9cclxuICBfc3RyaW5nTGFiZWwoKTogc3RyaW5nIHwgbnVsbCB7XHJcbiAgICByZXR1cm4gdGhpcy5sYWJlbCBpbnN0YW5jZW9mIEVzblN0ZXBMYWJlbCA/IG51bGwgOiB0aGlzLmxhYmVsO1xyXG4gIH1cclxuXHJcbiAgLyoqIFJldHVybnMgRXNuU3RlcExhYmVsIGlmIHRoZSBsYWJlbCBvZiBnaXZlbiBzdGVwIGlzIGEgdGVtcGxhdGUgbGFiZWwuICovXHJcbiAgX3RlbXBsYXRlTGFiZWwoKTogRXNuU3RlcExhYmVsIHwgbnVsbCB7XHJcbiAgICByZXR1cm4gdGhpcy5sYWJlbCBpbnN0YW5jZW9mIEVzblN0ZXBMYWJlbCA/IHRoaXMubGFiZWwgOiBudWxsO1xyXG4gIH1cclxuXHJcbiAgLyoqIFJldHVybnMgdGhlIGhvc3QgSFRNTCBlbGVtZW50LiAqL1xyXG4gIF9nZXRIb3N0RWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICAvKiogVGVtcGxhdGUgY29udGV4dCB2YXJpYWJsZXMgdGhhdCBhcmUgZXhwb3NlZCB0byB0aGUgYGVzblN0ZXBwZXJJY29uYCBpbnN0YW5jZXMuICovXHJcbiAgX2dldEljb25Db250ZXh0KCk6IEVzblN0ZXBwZXJJY29uQ29udGV4dCB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpbmRleDogdGhpcy5pbmRleCxcclxuICAgICAgYWN0aXZlOiB0aGlzLmFjdGl2ZSxcclxuICAgICAgb3B0aW9uYWw6IHRoaXMub3B0aW9uYWwsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgX2dldERlZmF1bHRUZXh0Rm9yU3RhdGUoc3RhdGU6IFN0ZXBTdGF0ZSwgaWNvbjogRXNuSWNvbk5hbWUpOiBzdHJpbmcge1xyXG4gICAgaWYgKCFpY29uICYmIHN0YXRlID09ICdudW1iZXInIHx8IHN0YXRlID09ICdlZGl0Jykge1xyXG4gICAgICByZXR1cm4gYCR7dGhpcy5pbmRleCArIDF9YDtcclxuICAgIH1cclxuICAgIGlmKCEhaWNvbikge1xyXG4gICAgICByZXR1cm4gaWNvbjtcclxuICAgIH1cclxuICAgIC8vIGlmIChzdGF0ZSA9PSAnZWRpdCcpIHtcclxuICAgIC8vICAgcmV0dXJuICdlZGl0LTInO1xyXG4gICAgLy8gfVxyXG4gICAgaWYgKHN0YXRlID09ICdlcnJvcicpIHtcclxuICAgICAgcmV0dXJuICd3YXJuaW5nJztcclxuICAgIH1cclxuICAgIHJldHVybiBzdGF0ZTtcclxuICB9XHJcbn1cclxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFpc01vYmlsZTsgZWxzZSBtb2JpbGVWZXJzaW9uXCI+XHJcbiAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLWhlYWRlci1yaXBwbGUgZXNuLWZvY3VzLWluZGljYXRvclwiIG1hdFJpcHBsZVxyXG4gICAgICAgW21hdFJpcHBsZURpc2FibGVkXT1cImRpc2FibGVSaXBwbGVcIj48L2Rpdj5cclxuXHJcbiAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLWljb24tc3RhdGUte3tzdGF0ZX19IGVzbi1zdGVwLWljb25cIiBbY2xhc3MuZXNuLXN0ZXAtaWNvbi1zZWxlY3RlZF09XCJzZWxlY3RlZFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLWljb24tY29udGVudFwiIFtuZ1N3aXRjaF09XCIhIShpY29uT3ZlcnJpZGVzICYmIGljb25PdmVycmlkZXNbc3RhdGVdKVwiPlxyXG4gICAgICA8bmctY29udGFpbmVyXHJcbiAgICAgICAgKm5nU3dpdGNoQ2FzZT1cInRydWVcIlxyXG4gICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImljb25PdmVycmlkZXNbc3RhdGVdXCJcclxuICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwiX2dldEljb25Db250ZXh0KClcIj48L25nLWNvbnRhaW5lcj5cclxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hEZWZhdWx0IFtuZ1N3aXRjaF09XCJzdGF0ZVwiPlxyXG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhZXNuSWNvblwiPlxyXG4gICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCIgKm5nU3dpdGNoQ2FzZT1cIidudW1iZXInXCI+e3tfZ2V0RGVmYXVsdFRleHRGb3JTdGF0ZShzdGF0ZSwgZXNuSWNvbil9fTwvc3Bhbj5cclxuICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiICpuZ1N3aXRjaENhc2U9XCInZWRpdCdcIj57e19nZXREZWZhdWx0VGV4dEZvclN0YXRlKHN0YXRlLCBlc25JY29uKX19PC9zcGFuPlxyXG4gICAgICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwiY2RrLXZpc3VhbGx5LWhpZGRlblwiICpuZ0lmPVwic3RhdGUgPT09ICdkb25lJ1wiPnt7X2ludGwuY29tcGxldGVkTGFiZWx9fTwvc3Bhbj5cclxuICAgICAgICA8c3BhbiBjbGFzcz1cImNkay12aXN1YWxseS1oaWRkZW5cIiAqbmdJZj1cInN0YXRlID09PSAnZWRpdCdcIj57e19pbnRsLmVkaXRhYmxlTGFiZWx9fTwvc3Bhbj5cclxuICAgICAgICA8ZXNuLWljb24gW25hbWVdPVwiZXNuSWNvbiB8fCBfZ2V0RGVmYXVsdFRleHRGb3JTdGF0ZShzdGF0ZSwgZXNuSWNvbilcIiBhcmlhLWhpZGRlbj1cInRydWVcIiAqbmdTd2l0Y2hEZWZhdWx0PjwvZXNuLWljb24+XHJcbiAgICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLWxhYmVsXCJcclxuICAgICAgIFtjbGFzcy5lc24tc3RlcC1sYWJlbC1hY3RpdmVdPVwiYWN0aXZlXCJcclxuICAgICAgIFtjbGFzcy5lc24tc3RlcC1sYWJlbC1zZWxlY3RlZF09XCJzZWxlY3RlZFwiXHJcbiAgICAgICBbY2xhc3MuZXNuLXN0ZXAtbGFiZWwtZXJyb3JdPVwic3RhdGUgPT0gJ2Vycm9yJ1wiPlxyXG4gICAgPCEtLSBJZiB0aGVyZSBpcyBhIGxhYmVsIHRlbXBsYXRlLCB1c2UgaXQuIC0tPlxyXG4gICAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLXRleHQtbGFiZWxcIiAqbmdJZj1cIl90ZW1wbGF0ZUxhYmVsKClcIj5cclxuICAgICAgPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJfdGVtcGxhdGVMYWJlbCgpIS50ZW1wbGF0ZVwiPjwvbmctY29udGFpbmVyPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8IS0tIElmIHRoZXJlIGlzIG5vIGxhYmVsIHRlbXBsYXRlLCBmYWxsIGJhY2sgdG8gdGhlIHRleHQgbGFiZWwuIC0tPlxyXG4gICAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLXRleHQtbGFiZWxcIiAqbmdJZj1cIl9zdHJpbmdMYWJlbCgpXCI+e3tsYWJlbH19PC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZXNuLXN0ZXAtb3B0aW9uYWxcIiAqbmdJZj1cIm9wdGlvbmFsICYmIHN0YXRlICE9ICdlcnJvcidcIj57e19pbnRsLm9wdGlvbmFsTGFiZWx9fTwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLXN1Yi1sYWJlbC1lcnJvclwiICpuZ0lmPVwic3RhdGUgPT0gJ2Vycm9yJ1wiPnt7ZXJyb3JNZXNzYWdlfX08L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9uZy1jb250YWluZXI+XHJcblxyXG48bmctdGVtcGxhdGUgI21vYmlsZVZlcnNpb24+XHJcblxyXG4gIDxkaXYgY2xhc3M9XCJlc24tc3RlcC1oZWFkZXItcmlwcGxlIGVzbi1mb2N1cy1pbmRpY2F0b3JcIiBtYXRSaXBwbGVcclxuICAgICAgIFttYXRSaXBwbGVEaXNhYmxlZF09XCJkaXNhYmxlUmlwcGxlXCI+PC9kaXY+XHJcblxyXG4gIDxkaXYgY2xhc3M9XCJlc24tc3RlcC1pY29uLXN0YXRlLXt7c3RhdGV9fSBlc24tc3RlcC1pY29uXCIgW2NsYXNzLmVzbi1zdGVwLWljb24tc2VsZWN0ZWRdPVwic2VsZWN0ZWRcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJlc24tc3RlcC1pY29uLWNvbnRlbnRcIiBbbmdTd2l0Y2hdPVwiISEoaWNvbk92ZXJyaWRlcyAmJiBpY29uT3ZlcnJpZGVzW3N0YXRlXSlcIj5cclxuICAgICAgPG5nLWNvbnRhaW5lclxyXG4gICAgICAgICpuZ1N3aXRjaENhc2U9XCJ0cnVlXCJcclxuICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJpY29uT3ZlcnJpZGVzW3N0YXRlXVwiXHJcbiAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIl9nZXRJY29uQ29udGV4dCgpXCI+PC9uZy1jb250YWluZXI+XHJcbiAgICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoRGVmYXVsdCBbbmdTd2l0Y2hdPVwic3RhdGVcIj5cclxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIWVzbkljb25cIj5cclxuICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiICpuZ1N3aXRjaENhc2U9XCInbnVtYmVyJ1wiPnt7X2dldERlZmF1bHRUZXh0Rm9yU3RhdGUoc3RhdGUsIGVzbkljb24pfX08L3NwYW4+XHJcbiAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIiAqbmdTd2l0Y2hDYXNlPVwiJ2VkaXQnXCI+e3tfZ2V0RGVmYXVsdFRleHRGb3JTdGF0ZShzdGF0ZSwgZXNuSWNvbil9fTwvc3Bhbj5cclxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgICA8c3BhbiBjbGFzcz1cImNkay12aXN1YWxseS1oaWRkZW5cIiAqbmdJZj1cInN0YXRlID09PSAnZG9uZSdcIj57e19pbnRsLmNvbXBsZXRlZExhYmVsfX08L3NwYW4+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJjZGstdmlzdWFsbHktaGlkZGVuXCIgKm5nSWY9XCJzdGF0ZSA9PT0gJ2VkaXQnXCI+e3tfaW50bC5lZGl0YWJsZUxhYmVsfX08L3NwYW4+XHJcbiAgICAgICAgPGVzbi1pY29uIFtuYW1lXT1cImVzbkljb24gfHwgX2dldERlZmF1bHRUZXh0Rm9yU3RhdGUoc3RhdGUsIGVzbkljb24pXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgKm5nU3dpdGNoRGVmYXVsdD48L2Vzbi1pY29uPlxyXG4gICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJlc24tc3RlcC1sYWJlbFwiXHJcbiAgICAgICBbY2xhc3MuZXNuLXN0ZXAtbGFiZWwtYWN0aXZlXT1cImFjdGl2ZVwiXHJcbiAgICAgICBbY2xhc3MuZXNuLXN0ZXAtbGFiZWwtc2VsZWN0ZWRdPVwic2VsZWN0ZWRcIlxyXG4gICAgICAgW2NsYXNzLmVzbi1zdGVwLWxhYmVsLWVycm9yXT1cInN0YXRlID09ICdlcnJvcidcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJlc24tc3RlcC1vcHRpb25hbFwiPiDDiVRBUEUge3tpbmRleCArIDF9fSAvIHt7c3RlcHNOdW1iZXJ9fTwvZGl2PlxyXG4gICAgPCEtLSBJZiB0aGVyZSBpcyBhIGxhYmVsIHRlbXBsYXRlLCB1c2UgaXQuIC0tPlxyXG4gICAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLXRleHQtbGFiZWxcIiAqbmdJZj1cIl90ZW1wbGF0ZUxhYmVsKClcIj5cclxuICAgICAgPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJfdGVtcGxhdGVMYWJlbCgpIS50ZW1wbGF0ZVwiPjwvbmctY29udGFpbmVyPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8IS0tIElmIHRoZXJlIGlzIG5vIGxhYmVsIHRlbXBsYXRlLCBmYWxsIGJhY2sgdG8gdGhlIHRleHQgbGFiZWwuIC0tPlxyXG4gICAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLXRleHQtbGFiZWxcIiAqbmdJZj1cIl9zdHJpbmdMYWJlbCgpXCI+e3tsYWJlbH19PC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZXNuLXN0ZXAtb3B0aW9uYWxcIiAqbmdJZj1cIm9wdGlvbmFsICYmIHN0YXRlICE9ICdlcnJvcidcIj57e19pbnRsLm9wdGlvbmFsTGFiZWx9fTwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImVzbi1zdGVwLXN1Yi1sYWJlbC1lcnJvclwiICpuZ0lmPVwic3RhdGUgPT0gJ2Vycm9yJ1wiPnt7ZXJyb3JNZXNzYWdlfX08L2Rpdj5cclxuICA8L2Rpdj48L25nLXRlbXBsYXRlPlxyXG4iXX0=
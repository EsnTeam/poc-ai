import { CdkStep, CdkStepper, STEPPER_GLOBAL_OPTIONS, } from '@angular/cdk/stepper';
import { ChangeDetectionStrategy, Component, ContentChild, ContentChildren, EventEmitter, forwardRef, Inject, Input, Optional, Output, QueryList, SkipSelf, ViewChildren, ViewEncapsulation, } from '@angular/core';
import { ErrorStateMatcher } from '@angular/material/core';
import { TemplatePortal } from '@angular/cdk/portal';
import { Subject, Subscription } from 'rxjs';
import { takeUntil, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';
import { EsnStepHeader } from './step-header';
import { EsnStepLabel } from './step-label';
import { DEFAULT_HORIZONTAL_ANIMATION_DURATION, DEFAULT_VERTICAL_ANIMATION_DURATION, esnStepperAnimations, } from './stepper-animations';
import { EsnStepperIcon } from './stepper-icon';
import { EsnStepContent } from './step-content';
import { EsnUtils } from '../../utils/public-api';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/core";
import * as i2 from "@angular/cdk/portal";
import * as i3 from "@angular/cdk/bidi";
import * as i4 from "@angular/cdk/layout";
import * as i5 from "@angular/common";
import * as i6 from "./step-header";
export class EsnStep extends CdkStep {
    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {
        super(stepper, stepperOptions);
        this._errorStateMatcher = _errorStateMatcher;
        this._viewContainerRef = _viewContainerRef;
        this._isSelected = Subscription.EMPTY;
    }
    ngAfterContentInit() {
        this._isSelected = this._stepper.steps.changes
            .pipe(switchMap(() => {
            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));
        }))
            .subscribe(isSelected => {
            if (isSelected && this._lazyContent && !this._portal) {
                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);
            }
        });
    }
    ngOnDestroy() {
        this._isSelected.unsubscribe();
    }
    /** Custom error state matcher that additionally checks for validity of interacted form. */
    isErrorState(control, form) {
        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);
        // Custom error state checks for the validity of form that is not submitted or touched
        // since user can trigger a form change by calling for another step without directly
        // interacting with the current form.
        const customErrorState = !!(control && control.invalid && this.interacted);
        return originalErrorState || customErrorState;
    }
}
EsnStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnStep, deps: [{ token: forwardRef(() => EsnStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });
EsnStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: EsnStep, selector: "esn-step", inputs: { esnIcon: "esnIcon" }, providers: [
        { provide: ErrorStateMatcher, useExisting: EsnStep },
        { provide: CdkStep, useExisting: EsnStep },
    ], queries: [{ propertyName: "stepLabel", first: true, predicate: EsnStepLabel, descendants: true }, { propertyName: "_lazyContent", first: true, predicate: EsnStepContent, descendants: true }], exportAs: ["esnStep"], usesInheritance: true, ngImport: i0, template: "<ng-template>\r\n  <ng-content></ng-content>\r\n  <ng-template [cdkPortalOutlet]=\"_portal\"></ng-template>\r\n</ng-template>\r\n", dependencies: [{ kind: "directive", type: i2.CdkPortalOutlet, selector: "[cdkPortalOutlet]", inputs: ["cdkPortalOutlet"], outputs: ["attached"], exportAs: ["cdkPortalOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnStep, decorators: [{
            type: Component,
            args: [{ selector: 'esn-step', providers: [
                        { provide: ErrorStateMatcher, useExisting: EsnStep },
                        { provide: CdkStep, useExisting: EsnStep },
                    ], encapsulation: ViewEncapsulation.None, exportAs: 'esnStep', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template>\r\n  <ng-content></ng-content>\r\n  <ng-template [cdkPortalOutlet]=\"_portal\"></ng-template>\r\n</ng-template>\r\n" }]
        }], ctorParameters: function () { return [{ type: EsnStepper, decorators: [{
                    type: Inject,
                    args: [forwardRef(() => EsnStepper)]
                }] }, { type: i1.ErrorStateMatcher, decorators: [{
                    type: SkipSelf
                }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [STEPPER_GLOBAL_OPTIONS]
                }] }]; }, propDecorators: { stepLabel: [{
                type: ContentChild,
                args: [EsnStepLabel]
            }], esnIcon: [{
                type: Input
            }], _lazyContent: [{
                type: ContentChild,
                args: [EsnStepContent, { static: false }]
            }] } });
export class EsnStepper extends CdkStepper {
    constructor(dir, changeDetectorRef, elementRef, breakpointObserver, cdr) {
        super(dir, changeDetectorRef, elementRef);
        this.breakpointObserver = breakpointObserver;
        this.cdr = cdr;
        /** Steps that belong to the current stepper, excluding ones from nested steppers. */
        this.steps = new QueryList();
        /** Event emitted when the current step is done transitioning in. */
        this.animationDone = new EventEmitter();
        /**
         * Whether the label should display in bottom or end position.
         * Only applies in the `horizontal` orientation.
         */
        this.labelPosition = 'end';
        /**
         * Position of the stepper's header.
         * Only applies in the `horizontal` orientation.
         */
        this.headerPosition = 'top';
        /**
         * Detach the stepper content.
         * Only applies in the `vertical` orientation.
         */
        this.detachContent = false;
        /** Consumer-specified template-refs to be used to override the header icons. */
        this._iconOverrides = {};
        /** Stream of animation `done` events when the body expands/collapses. */
        this._animationDone = new Subject();
        this._animationDuration = '';
        this.onChangeSub = new Subscription();
        this.isMobile = false;
        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();
        this.orientation = nodeName === 'esn-vertical-stepper' ? 'vertical' : 'horizontal';
    }
    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */
    get animationDuration() {
        return this._animationDuration;
    }
    set animationDuration(value) {
        this._animationDuration = /^\d+$/.test(value) ? value + 'ms' : value;
    }
    ngOnInit() {
        // detect screen size changes
        this.onChangeSub.add(this.breakpointObserver.observe([
            `(max-width: ${EsnUtils.BREAKPOINTS.mobile})`
        ]).subscribe((result) => {
            this.isMobile = result.matches;
            this.cdr.detectChanges();
        }));
    }
    ngOnDestroy() {
        this.onChangeSub.unsubscribe();
    }
    ngAfterContentInit() {
        super.ngAfterContentInit();
        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));
        // Mark the component for change detection whenever the content children query changes
        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {
            this._stateChanged();
        });
        this._animationDone
            .pipe(
        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due
        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.
        // See https://github.com/angular/angular/issues/24084
        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))
            .subscribe(event => {
            if (event.toState === 'current') {
                this.animationDone.emit();
            }
        });
    }
    _stepIsNavigable(index, step) {
        return step.completed || this.selectedIndex === index || !this.linear;
    }
    _getAnimationDuration() {
        if (this.animationDuration) {
            return this.animationDuration;
        }
        return this.orientation === 'horizontal'
            ? DEFAULT_HORIZONTAL_ANIMATION_DURATION
            : DEFAULT_VERTICAL_ANIMATION_DURATION;
    }
}
EsnStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnStepper, deps: [{ token: i3.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i4.BreakpointObserver }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
EsnStepper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: EsnStepper, selector: "esn-stepper, esn-vertical-stepper, esn-horizontal-stepper, [esnStepper]", inputs: { selectedIndex: "selectedIndex", disableRipple: "disableRipple", labelPosition: "labelPosition", headerPosition: "headerPosition", detachContent: "detachContent", animationDuration: "animationDuration" }, outputs: { animationDone: "animationDone" }, host: { attributes: { "role": "tablist" }, properties: { "class.esn-stepper-horizontal": "orientation === \"horizontal\"", "class.esn-stepper-vertical": "orientation === \"vertical\"", "class.esn-stepper-label-position-end": "orientation === \"horizontal\" && labelPosition == \"end\"", "class.esn-stepper-label-position-bottom": "orientation === \"horizontal\" && labelPosition == \"bottom\"", "class.esn-stepper-header-position-bottom": "headerPosition === \"bottom\"", "attr.aria-orientation": "orientation" } }, providers: [{ provide: CdkStepper, useExisting: EsnStepper }], queries: [{ propertyName: "_steps", predicate: EsnStep, descendants: true }, { propertyName: "_icons", predicate: EsnStepperIcon, descendants: true }], viewQueries: [{ propertyName: "_stepHeader", predicate: EsnStepHeader, descendants: true }], exportAs: ["esnStepper", "esnVerticalStepper", "esnHorizontalStepper"], usesInheritance: true, ngImport: i0, template: "\r\n\r\n\r\n    \r\n  <ng-container *ngIf=\"!isMobile; else mobileVersion\">\r\n    <ng-container [ngSwitch]=\"orientation\">\r\n      <!-- Horizontal stepper -->\r\n      <div class=\"esn-horizontal-stepper-wrapper\" *ngSwitchCase=\"'horizontal'\">\r\n        <div class=\"esn-horizontal-stepper-header-container\">\r\n          <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last\">\r\n            <ng-container\r\n              [ngTemplateOutlet]=\"stepTemplate\"\r\n              [ngTemplateOutletContext]=\"{step: step, i: i}\"></ng-container>\r\n            <div *ngIf=\"!isLast\" class=\"esn-stepper-horizontal-line\"></div>\r\n          </ng-container>\r\n        </div>\r\n  \r\n        <div class=\"esn-horizontal-content-container\">\r\n          <div *ngFor=\"let step of steps; let i = index\"\r\n               class=\"esn-horizontal-stepper-content\" role=\"tabpanel\"\r\n               [@horizontalStepTransition]=\"{\r\n                'value': _getAnimationDirection(i),\r\n                'params': {'animationDuration': _getAnimationDuration()}\r\n              }\"\r\n               (@horizontalStepTransition.done)=\"_animationDone.next($event)\"\r\n               [id]=\"_getStepContentId(i)\"\r\n               [attr.aria-labelledby]=\"_getStepLabelId(i)\"\r\n               [class.esn-horizontal-stepper-content-inactive]=\"selectedIndex !== i\">\r\n            <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Vertical stepper -->\r\n      <ng-container *ngSwitchCase=\"'vertical'\">\r\n    <!-- Detached content -->\r\n        <div class=\"detached__container\" *ngIf=\"detachContent; else vertical\">\r\n          <div class=\"detached__steps\">\r\n            <div class=\"esn-step\" *ngFor=\"let step of steps; let i = index; let isLast = last\">\r\n              <ng-container\r\n                [ngTemplateOutlet]=\"stepTemplate\"\r\n                [ngTemplateOutletContext]=\"{step: step, i: i}\"></ng-container>\r\n              <div class=\"esn-vertical-content-container\" [class.esn-stepper-vertical-line]=\"!isLast\">\r\n                <div class=\"esn-vertical-stepper-content\" role=\"tabpanel\"\r\n                    [@verticalStepTransition]=\"{\r\n                      'value': _getAnimationDirection(i),\r\n                      'params': {'animationDuration': _getAnimationDuration()}\r\n                    }\"\r\n                    (@verticalStepTransition.done)=\"_animationDone.next($event)\"\r\n                    [id]=\"_getStepContentId(i)\"\r\n                    [attr.aria-labelledby]=\"_getStepLabelId(i)\"\r\n                    [class.esn-vertical-stepper-content-inactive]=\"selectedIndex !== i\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"detached__content\">\r\n            <ng-container *ngIf=\"selected\" [ngTemplateOutlet]=\"selected.content\"></ng-container>\r\n          </div>\r\n        </div>\r\n        <ng-template  #vertical>\r\n          <div class=\"esn-step\" *ngFor=\"let step of steps; let i = index; let isLast = last\">\r\n            <ng-container\r\n              [ngTemplateOutlet]=\"stepTemplate\"\r\n              [ngTemplateOutletContext]=\"{step: step, i: i}\"></ng-container>\r\n            <div class=\"esn-vertical-content-container\" [class.esn-stepper-vertical-line]=\"!isLast\">\r\n              <div class=\"esn-vertical-stepper-content\" role=\"tabpanel\"\r\n                   [@verticalStepTransition]=\"{\r\n                    'value': _getAnimationDirection(i),\r\n                    'params': {'animationDuration': _getAnimationDuration()}\r\n                  }\"\r\n                   (@verticalStepTransition.done)=\"_animationDone.next($event)\"\r\n                   [id]=\"_getStepContentId(i)\"\r\n                   [attr.aria-labelledby]=\"_getStepLabelId(i)\"\r\n                   [class.esn-vertical-stepper-content-inactive]=\"selectedIndex !== i\">\r\n                <div class=\"esn-vertical-content\">\r\n                  <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </ng-container>\r\n  </ng-container>\r\n    </ng-container>\r\n  \r\n  <!-- Mobile version -->\r\n  <ng-template #mobileVersion>\r\n    <div class=\"esn-step mobile_steps_container\" *ngFor=\"let step of steps; let i = index; let isLast = last\">\r\n      <ng-container *ngIf=\"selectedIndex === i\"\r\n        [ngTemplateOutlet]=\"stepTemplate\"\r\n        [ngTemplateOutletContext]=\"{step: step, i: i}\"></ng-container>\r\n    </div>\r\n    <ng-container *ngIf=\"selected\" [ngTemplateOutlet]=\"selected.content\"></ng-container>\r\n  </ng-template>\r\n\r\n  <!-- Common step templating -->\r\n  <ng-template let-step=\"step\" let-i=\"i\" #stepTemplate>\r\n    <esn-step-header\r\n      [class.esn-horizontal-stepper-header]=\"orientation === 'horizontal'\"\r\n      [class.esn-vertical-stepper-header]=\"orientation === 'vertical'\"\r\n      (click)=\"step.select()\"\r\n      (keydown)=\"_onKeydown($event)\"\r\n      [tabIndex]=\"_getFocusIndex() === i ? 0 : -1\"\r\n      [id]=\"_getStepLabelId(i)\"\r\n      [attr.aria-posinset]=\"i + 1\"\r\n      [attr.aria-setsize]=\"steps.length\"\r\n      [attr.aria-controls]=\"_getStepContentId(i)\"\r\n      [attr.aria-selected]=\"selectedIndex == i\"\r\n      [attr.aria-label]=\"step.ariaLabel || null\"\r\n      [attr.aria-labelledby]=\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\"\r\n      [attr.aria-disabled]=\"_stepIsNavigable(i, step) ? null : true\"\r\n      [index]=\"i\"\r\n      [state]=\"_getIndicatorType(i, step.state)\"\r\n      [label]=\"step.stepLabel || step.label\"\r\n      [selected]=\"selectedIndex === i\"\r\n      [active]=\"_stepIsNavigable(i, step)\"\r\n      [optional]=\"step.optional\"\r\n      [errorMessage]=\"step.errorMessage\"\r\n      [iconOverrides]=\"_iconOverrides\"\r\n      [disableRipple]=\"disableRipple || !_stepIsNavigable(i, step)\"\r\n      [esnIcon]=\"step.esnIcon\"\r\n      [isMobile]=\"isMobile\"\r\n      [stepsNumber]=\"steps?.length\"\r\n    ></esn-step-header>\r\n  </ng-template>", styles: [".esn-stepper-vertical,.esn-stepper-horizontal{display:block}.esn-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header-container{align-items:flex-start}.esn-stepper-header-position-bottom .esn-horizontal-stepper-header-container{order:1}.esn-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.esn-stepper-label-position-bottom .esn-stepper-horizontal-line{margin:0;min-width:0;position:relative}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:first-child):before,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:last-child):before,.esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:last-child):after,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:first-child):after{border-top-width:1px;border-top-style:solid;content:\"\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.esn-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.esn-horizontal-stepper-header .esn-step-icon{margin-right:8px;flex:none}[dir=rtl] .esn-horizontal-stepper-header .esn-step-icon{margin-right:0;margin-left:8px}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:last-child):after,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:first-child):after{right:0}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:first-child):before,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:last-child):before{left:0}[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:last-child:before,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:first-child:after{display:none}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header .esn-step-icon{margin-right:0;margin-left:0}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header .esn-step-label{padding:16px 0 0;text-align:center;width:100%}.esn-vertical-stepper-header{display:flex;align-items:center;height:44px}.esn-vertical-stepper-header .esn-step-icon{margin-right:12px}[dir=rtl] .esn-vertical-stepper-header .esn-step-icon{margin-right:0;margin-left:12px}.esn-horizontal-stepper-wrapper{display:flex;flex-direction:column}.esn-horizontal-stepper-content{outline:0}.esn-horizontal-stepper-content.esn-horizontal-stepper-content-inactive{height:0;overflow:hidden}.esn-horizontal-stepper-content:not(.esn-horizontal-stepper-content-inactive){visibility:inherit!important}.esn-horizontal-content-container{overflow:hidden;padding:0 24px 24px}.cdk-high-contrast-active .esn-horizontal-content-container{outline:solid 1px}.esn-stepper-header-position-bottom .esn-horizontal-content-container{padding:24px 24px 0}.esn-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .esn-vertical-content-container{outline:solid 1px}[dir=rtl] .esn-vertical-content-container{margin-left:0;margin-right:36px}.esn-stepper-vertical-line:before{content:\"\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .esn-stepper-vertical-line:before{left:auto;right:0}.esn-vertical-stepper-content{overflow:hidden;outline:0}.esn-vertical-stepper-content:not(.esn-vertical-stepper-content-inactive){visibility:inherit!important}.esn-vertical-content{padding:0 24px 24px}.esn-step:last-child .esn-vertical-content-container{border:none}.detached__container{display:flex}.detached__content{overflow:hidden;margin-top:.5rem;margin-left:5rem}.mobile_steps_container{margin-bottom:1rem}\n"], dependencies: [{ kind: "directive", type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i5.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i5.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "component", type: i6.EsnStepHeader, selector: "esn-step-header", inputs: ["state", "label", "errorMessage", "iconOverrides", "index", "selected", "active", "optional", "disableRipple", "esnIcon", "isMobile", "stepsNumber"] }], animations: [
        esnStepperAnimations.horizontalStepTransition,
        esnStepperAnimations.verticalStepTransition,
    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnStepper, decorators: [{
            type: Component,
            args: [{ selector: 'esn-stepper, esn-vertical-stepper, esn-horizontal-stepper, [esnStepper]', exportAs: 'esnStepper, esnVerticalStepper, esnHorizontalStepper', inputs: ['selectedIndex'], host: {
                        '[class.esn-stepper-horizontal]': 'orientation === "horizontal"',
                        '[class.esn-stepper-vertical]': 'orientation === "vertical"',
                        '[class.esn-stepper-label-position-end]': 'orientation === "horizontal" && labelPosition == "end"',
                        '[class.esn-stepper-label-position-bottom]': 'orientation === "horizontal" && labelPosition == "bottom"',
                        '[class.esn-stepper-header-position-bottom]': 'headerPosition === "bottom"',
                        '[attr.aria-orientation]': 'orientation',
                        'role': 'tablist',
                    }, animations: [
                        esnStepperAnimations.horizontalStepTransition,
                        esnStepperAnimations.verticalStepTransition,
                    ], providers: [{ provide: CdkStepper, useExisting: EsnStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "\r\n\r\n\r\n    \r\n  <ng-container *ngIf=\"!isMobile; else mobileVersion\">\r\n    <ng-container [ngSwitch]=\"orientation\">\r\n      <!-- Horizontal stepper -->\r\n      <div class=\"esn-horizontal-stepper-wrapper\" *ngSwitchCase=\"'horizontal'\">\r\n        <div class=\"esn-horizontal-stepper-header-container\">\r\n          <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last\">\r\n            <ng-container\r\n              [ngTemplateOutlet]=\"stepTemplate\"\r\n              [ngTemplateOutletContext]=\"{step: step, i: i}\"></ng-container>\r\n            <div *ngIf=\"!isLast\" class=\"esn-stepper-horizontal-line\"></div>\r\n          </ng-container>\r\n        </div>\r\n  \r\n        <div class=\"esn-horizontal-content-container\">\r\n          <div *ngFor=\"let step of steps; let i = index\"\r\n               class=\"esn-horizontal-stepper-content\" role=\"tabpanel\"\r\n               [@horizontalStepTransition]=\"{\r\n                'value': _getAnimationDirection(i),\r\n                'params': {'animationDuration': _getAnimationDuration()}\r\n              }\"\r\n               (@horizontalStepTransition.done)=\"_animationDone.next($event)\"\r\n               [id]=\"_getStepContentId(i)\"\r\n               [attr.aria-labelledby]=\"_getStepLabelId(i)\"\r\n               [class.esn-horizontal-stepper-content-inactive]=\"selectedIndex !== i\">\r\n            <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Vertical stepper -->\r\n      <ng-container *ngSwitchCase=\"'vertical'\">\r\n    <!-- Detached content -->\r\n        <div class=\"detached__container\" *ngIf=\"detachContent; else vertical\">\r\n          <div class=\"detached__steps\">\r\n            <div class=\"esn-step\" *ngFor=\"let step of steps; let i = index; let isLast = last\">\r\n              <ng-container\r\n                [ngTemplateOutlet]=\"stepTemplate\"\r\n                [ngTemplateOutletContext]=\"{step: step, i: i}\"></ng-container>\r\n              <div class=\"esn-vertical-content-container\" [class.esn-stepper-vertical-line]=\"!isLast\">\r\n                <div class=\"esn-vertical-stepper-content\" role=\"tabpanel\"\r\n                    [@verticalStepTransition]=\"{\r\n                      'value': _getAnimationDirection(i),\r\n                      'params': {'animationDuration': _getAnimationDuration()}\r\n                    }\"\r\n                    (@verticalStepTransition.done)=\"_animationDone.next($event)\"\r\n                    [id]=\"_getStepContentId(i)\"\r\n                    [attr.aria-labelledby]=\"_getStepLabelId(i)\"\r\n                    [class.esn-vertical-stepper-content-inactive]=\"selectedIndex !== i\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"detached__content\">\r\n            <ng-container *ngIf=\"selected\" [ngTemplateOutlet]=\"selected.content\"></ng-container>\r\n          </div>\r\n        </div>\r\n        <ng-template  #vertical>\r\n          <div class=\"esn-step\" *ngFor=\"let step of steps; let i = index; let isLast = last\">\r\n            <ng-container\r\n              [ngTemplateOutlet]=\"stepTemplate\"\r\n              [ngTemplateOutletContext]=\"{step: step, i: i}\"></ng-container>\r\n            <div class=\"esn-vertical-content-container\" [class.esn-stepper-vertical-line]=\"!isLast\">\r\n              <div class=\"esn-vertical-stepper-content\" role=\"tabpanel\"\r\n                   [@verticalStepTransition]=\"{\r\n                    'value': _getAnimationDirection(i),\r\n                    'params': {'animationDuration': _getAnimationDuration()}\r\n                  }\"\r\n                   (@verticalStepTransition.done)=\"_animationDone.next($event)\"\r\n                   [id]=\"_getStepContentId(i)\"\r\n                   [attr.aria-labelledby]=\"_getStepLabelId(i)\"\r\n                   [class.esn-vertical-stepper-content-inactive]=\"selectedIndex !== i\">\r\n                <div class=\"esn-vertical-content\">\r\n                  <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </ng-container>\r\n  </ng-container>\r\n    </ng-container>\r\n  \r\n  <!-- Mobile version -->\r\n  <ng-template #mobileVersion>\r\n    <div class=\"esn-step mobile_steps_container\" *ngFor=\"let step of steps; let i = index; let isLast = last\">\r\n      <ng-container *ngIf=\"selectedIndex === i\"\r\n        [ngTemplateOutlet]=\"stepTemplate\"\r\n        [ngTemplateOutletContext]=\"{step: step, i: i}\"></ng-container>\r\n    </div>\r\n    <ng-container *ngIf=\"selected\" [ngTemplateOutlet]=\"selected.content\"></ng-container>\r\n  </ng-template>\r\n\r\n  <!-- Common step templating -->\r\n  <ng-template let-step=\"step\" let-i=\"i\" #stepTemplate>\r\n    <esn-step-header\r\n      [class.esn-horizontal-stepper-header]=\"orientation === 'horizontal'\"\r\n      [class.esn-vertical-stepper-header]=\"orientation === 'vertical'\"\r\n      (click)=\"step.select()\"\r\n      (keydown)=\"_onKeydown($event)\"\r\n      [tabIndex]=\"_getFocusIndex() === i ? 0 : -1\"\r\n      [id]=\"_getStepLabelId(i)\"\r\n      [attr.aria-posinset]=\"i + 1\"\r\n      [attr.aria-setsize]=\"steps.length\"\r\n      [attr.aria-controls]=\"_getStepContentId(i)\"\r\n      [attr.aria-selected]=\"selectedIndex == i\"\r\n      [attr.aria-label]=\"step.ariaLabel || null\"\r\n      [attr.aria-labelledby]=\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\"\r\n      [attr.aria-disabled]=\"_stepIsNavigable(i, step) ? null : true\"\r\n      [index]=\"i\"\r\n      [state]=\"_getIndicatorType(i, step.state)\"\r\n      [label]=\"step.stepLabel || step.label\"\r\n      [selected]=\"selectedIndex === i\"\r\n      [active]=\"_stepIsNavigable(i, step)\"\r\n      [optional]=\"step.optional\"\r\n      [errorMessage]=\"step.errorMessage\"\r\n      [iconOverrides]=\"_iconOverrides\"\r\n      [disableRipple]=\"disableRipple || !_stepIsNavigable(i, step)\"\r\n      [esnIcon]=\"step.esnIcon\"\r\n      [isMobile]=\"isMobile\"\r\n      [stepsNumber]=\"steps?.length\"\r\n    ></esn-step-header>\r\n  </ng-template>", styles: [".esn-stepper-vertical,.esn-stepper-horizontal{display:block}.esn-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header-container{align-items:flex-start}.esn-stepper-header-position-bottom .esn-horizontal-stepper-header-container{order:1}.esn-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.esn-stepper-label-position-bottom .esn-stepper-horizontal-line{margin:0;min-width:0;position:relative}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:first-child):before,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:last-child):before,.esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:last-child):after,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:first-child):after{border-top-width:1px;border-top-style:solid;content:\"\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.esn-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.esn-horizontal-stepper-header .esn-step-icon{margin-right:8px;flex:none}[dir=rtl] .esn-horizontal-stepper-header .esn-step-icon{margin-right:0;margin-left:8px}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:last-child):after,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:first-child):after{right:0}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:first-child):before,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:not(:last-child):before{left:0}[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:last-child:before,[dir=rtl] .esn-stepper-label-position-bottom .esn-horizontal-stepper-header:first-child:after{display:none}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header .esn-step-icon{margin-right:0;margin-left:0}.esn-stepper-label-position-bottom .esn-horizontal-stepper-header .esn-step-label{padding:16px 0 0;text-align:center;width:100%}.esn-vertical-stepper-header{display:flex;align-items:center;height:44px}.esn-vertical-stepper-header .esn-step-icon{margin-right:12px}[dir=rtl] .esn-vertical-stepper-header .esn-step-icon{margin-right:0;margin-left:12px}.esn-horizontal-stepper-wrapper{display:flex;flex-direction:column}.esn-horizontal-stepper-content{outline:0}.esn-horizontal-stepper-content.esn-horizontal-stepper-content-inactive{height:0;overflow:hidden}.esn-horizontal-stepper-content:not(.esn-horizontal-stepper-content-inactive){visibility:inherit!important}.esn-horizontal-content-container{overflow:hidden;padding:0 24px 24px}.cdk-high-contrast-active .esn-horizontal-content-container{outline:solid 1px}.esn-stepper-header-position-bottom .esn-horizontal-content-container{padding:24px 24px 0}.esn-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .esn-vertical-content-container{outline:solid 1px}[dir=rtl] .esn-vertical-content-container{margin-left:0;margin-right:36px}.esn-stepper-vertical-line:before{content:\"\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .esn-stepper-vertical-line:before{left:auto;right:0}.esn-vertical-stepper-content{overflow:hidden;outline:0}.esn-vertical-stepper-content:not(.esn-vertical-stepper-content-inactive){visibility:inherit!important}.esn-vertical-content{padding:0 24px 24px}.esn-step:last-child .esn-vertical-content-container{border:none}.detached__container{display:flex}.detached__content{overflow:hidden;margin-top:.5rem;margin-left:5rem}.mobile_steps_container{margin-bottom:1rem}\n"] }]
        }], ctorParameters: function () { return [{ type: i3.Directionality, decorators: [{
                    type: Optional
                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i4.BreakpointObserver }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _stepHeader: [{
                type: ViewChildren,
                args: [EsnStepHeader]
            }], _steps: [{
                type: ContentChildren,
                args: [EsnStep, { descendants: true }]
            }], _icons: [{
                type: ContentChildren,
                args: [EsnStepperIcon, { descendants: true }]
            }], animationDone: [{
                type: Output
            }], disableRipple: [{
                type: Input
            }], labelPosition: [{
                type: Input
            }], headerPosition: [{
                type: Input
            }], detachContent: [{
                type: Input
            }], animationDuration: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,
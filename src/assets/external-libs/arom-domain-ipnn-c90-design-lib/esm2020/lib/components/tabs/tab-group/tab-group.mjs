import { coerceBooleanProperty } from "@angular/cdk/coercion";
import { Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ViewChild, Inject, Optional, ANIMATION_MODULE_TYPE, Input } from "@angular/core";
import { MAT_TAB_GROUP, _MatTabGroupBase, MAT_TABS_CONFIG } from "@angular/material/tabs";
import { EsnTab } from "./tab";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/core";
import * as i3 from "@angular/cdk/a11y";
import * as i4 from "@angular/cdk/portal";
import * as i5 from "./tab-body";
import * as i6 from "./tab-header";
import * as i7 from "./tab-label-wrapper";
export class EsnTabGroup extends _MatTabGroupBase {
    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {
        super(elementRef, changeDetectorRef, defaultConfig, animationMode);
        this._fitInkBarToContent = false;
        this._stretchTabs = true;
        this.fitInkBarToContent =
            defaultConfig && defaultConfig.fitInkBarToContent != null
                ? defaultConfig.fitInkBarToContent
                : false;
    }
    /** Whether the ink bar should fit its width to the size of the tab label content. */
    get fitInkBarToContent() {
        return this._fitInkBarToContent;
    }
    set fitInkBarToContent(v) {
        this._fitInkBarToContent = coerceBooleanProperty(v);
        this._changeDetectorRef.markForCheck();
    }
    /** Whether tabs should be stretched to fill the header. */
    get stretchTabs() {
        return this._stretchTabs;
    }
    set stretchTabs(v) {
        this._stretchTabs = coerceBooleanProperty(v);
    }
}
EsnTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });
EsnTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: EsnTabGroup, selector: "esn-tab-group", inputs: { color: "color", disableRipple: "disableRipple", fitInkBarToContent: "fitInkBarToContent", stretchTabs: ["mat-stretch-tabs", "stretchTabs"] }, host: { properties: { "class.mat-tab-group-dynamic-height": "dynamicHeight", "class.mat-tab-group-inverted-header": "headerPosition === \"below\"", "class.mat-mdc-tab-group-stretch-tabs": "stretchTabs" }, classAttribute: "mat-tab-group" }, providers: [
        {
            provide: MAT_TAB_GROUP,
            useExisting: EsnTabGroup,
        },
    ], queries: [{ propertyName: "_allTabs", predicate: EsnTab, descendants: true }], viewQueries: [{ propertyName: "_tabBodyWrapper", first: true, predicate: ["tabBodyWrapper"], descendants: true }, { propertyName: "_tabHeader", first: true, predicate: ["tabHeader"], descendants: true }], exportAs: ["esnTabGroup"], usesInheritance: true, ngImport: i0, template: "<mat-tab-header\r\n  #tabHeader\r\n  [selectedIndex]=\"selectedIndex || 0\"\r\n  [disableRipple]=\"disableRipple\"\r\n  (indexFocused)=\"_focusChanged($event)\"\r\n  (selectFocusedIndex)=\"selectedIndex = $event\"\r\n>\r\n  <div\r\n    class=\"mdc-tab mat-mdc-tab mat-mdc-focus-indicator\"\r\n    #tabNode\r\n    role=\"tab\"\r\n    matTabLabelWrapper\r\n    cdkMonitorElementFocus\r\n    *ngFor=\"let tab of _tabs; let i = index\"\r\n    [id]=\"_getTabLabelId(i)\"\r\n    [attr.tabIndex]=\"_getTabIndex(i)\"\r\n    [attr.aria-posinset]=\"i + 1\"\r\n    [attr.aria-setsize]=\"_tabs.length\"\r\n    [attr.aria-controls]=\"_getTabContentId(i)\"\r\n    [attr.aria-selected]=\"selectedIndex === i\"\r\n    [attr.aria-label]=\"tab.ariaLabel || null\"\r\n    [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\"\r\n    [class.mdc-tab--active]=\"selectedIndex === i\"\r\n    [ngClass]=\"tab.labelClass\"\r\n    [disabled]=\"tab.disabled\"\r\n    [fitInkBarToContent]=\"fitInkBarToContent\"\r\n    (click)=\"_handleClick(tab, tabHeader, i)\"\r\n    (cdkFocusChange)=\"_tabFocusChanged($event, i)\"\r\n  >\r\n    <span class=\"mdc-tab__ripple\"></span>\r\n\r\n    <!-- Needs to be a separate element, because we can't put\r\n         `overflow: hidden` on tab due to the ink bar. -->\r\n    <div\r\n      class=\"mat-mdc-tab-ripple\"\r\n      mat-ripple\r\n      [matRippleTrigger]=\"tabNode\"\r\n      [matRippleDisabled]=\"tab.disabled || disableRipple\"\r\n    ></div>\r\n\r\n    <span class=\"mdc-tab__content\">\r\n      <span class=\"mdc-tab__text-label\">\r\n        <!-- If there is a label template, use it. -->\r\n        <ng-template [ngIf]=\"tab.templateLabel\" [ngIfElse]=\"tabTextLabel\">\r\n          <ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template>\r\n        </ng-template>\r\n\r\n        <!-- If there is not a label template, fall back to the text label. -->\r\n        <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\r\n      </span>\r\n    </span>\r\n  </div>\r\n</mat-tab-header>\r\n\r\n<div\r\n  class=\"mat-mdc-tab-body-wrapper\"\r\n  [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\"\r\n  #tabBodyWrapper\r\n>\r\n  <mat-tab-body\r\n    role=\"tabpanel\"\r\n    *ngFor=\"let tab of _tabs; let i = index\"\r\n    [id]=\"_getTabContentId(i)\"\r\n    [attr.tabindex]=\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\"\r\n    [attr.aria-labelledby]=\"_getTabLabelId(i)\"\r\n    [class.mat-mdc-tab-body-active]=\"selectedIndex === i\"\r\n    [ngClass]=\"tab.bodyClass\"\r\n    [content]=\"tab.content!\"\r\n    [position]=\"tab.position!\"\r\n    [origin]=\"tab.origin\"\r\n    [animationDuration]=\"animationDuration\"\r\n    [preserveContent]=\"preserveContent\"\r\n    (_onCentered)=\"_removeTabBodyWrapperHeight()\"\r\n    (_onCentering)=\"_setTabBodyWrapperHeight($event)\"\r\n  >\r\n  </mat-tab-body>\r\n</div>\r\n", styles: [".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab[hidden]{display:none}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:.15s color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:.15s color linear;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:.1s}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab-indicator .mdc-tab-indicator__content--underline{border-top-width:2px}.mdc-tab-indicator .mdc-tab-indicator__content--icon{height:34px;font-size:34px}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:.25s transform cubic-bezier(.4,0,.2,1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:.15s opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:.1s}.mat-mdc-tab-ripple{position:absolute;inset:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:transparent}.mat-mdc-tab.mdc-tab{height:48px;flex-grow:0}.mat-mdc-tab .mdc-tab__ripple:before{content:\"\";display:block;position:absolute;inset:0;opacity:0;pointer-events:none}.mat-mdc-tab .mdc-tab__content{position:relative}.mat-mdc-tab:hover .mdc-tab__ripple:before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple:before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple:before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none!important;animation:none!important}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.MatRipple, selector: "[mat-ripple], [matRipple]", inputs: ["matRippleColor", "matRippleUnbounded", "matRippleCentered", "matRippleRadius", "matRippleAnimation", "matRippleDisabled", "matRippleTrigger"], exportAs: ["matRipple"] }, { kind: "directive", type: i3.CdkMonitorFocus, selector: "[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]", outputs: ["cdkFocusChange"], exportAs: ["cdkMonitorFocus"] }, { kind: "directive", type: i4.CdkPortalOutlet, selector: "[cdkPortalOutlet]", inputs: ["cdkPortalOutlet"], outputs: ["attached"], exportAs: ["cdkPortalOutlet"] }, { kind: "component", type: i5.MatTabBody, selector: "mat-tab-body" }, { kind: "component", type: i6.MatTabHeader, selector: "mat-tab-header", inputs: ["selectedIndex"], outputs: ["selectFocusedIndex", "indexFocused"] }, { kind: "directive", type: i7.MatTabLabelWrapper, selector: "[matTabLabelWrapper]", inputs: ["disabled", "fitInkBarToContent"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnTabGroup, decorators: [{
            type: Component,
            args: [{ selector: 'esn-tab-group', exportAs: 'esnTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [
                        {
                            provide: MAT_TAB_GROUP,
                            useExisting: EsnTabGroup,
                        },
                    ], host: {
                        'class': 'mat-tab-group',
                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',
                        '[class.mat-tab-group-inverted-header]': 'headerPosition === "below"',
                        '[class.mat-mdc-tab-group-stretch-tabs]': 'stretchTabs',
                    }, template: "<mat-tab-header\r\n  #tabHeader\r\n  [selectedIndex]=\"selectedIndex || 0\"\r\n  [disableRipple]=\"disableRipple\"\r\n  (indexFocused)=\"_focusChanged($event)\"\r\n  (selectFocusedIndex)=\"selectedIndex = $event\"\r\n>\r\n  <div\r\n    class=\"mdc-tab mat-mdc-tab mat-mdc-focus-indicator\"\r\n    #tabNode\r\n    role=\"tab\"\r\n    matTabLabelWrapper\r\n    cdkMonitorElementFocus\r\n    *ngFor=\"let tab of _tabs; let i = index\"\r\n    [id]=\"_getTabLabelId(i)\"\r\n    [attr.tabIndex]=\"_getTabIndex(i)\"\r\n    [attr.aria-posinset]=\"i + 1\"\r\n    [attr.aria-setsize]=\"_tabs.length\"\r\n    [attr.aria-controls]=\"_getTabContentId(i)\"\r\n    [attr.aria-selected]=\"selectedIndex === i\"\r\n    [attr.aria-label]=\"tab.ariaLabel || null\"\r\n    [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\"\r\n    [class.mdc-tab--active]=\"selectedIndex === i\"\r\n    [ngClass]=\"tab.labelClass\"\r\n    [disabled]=\"tab.disabled\"\r\n    [fitInkBarToContent]=\"fitInkBarToContent\"\r\n    (click)=\"_handleClick(tab, tabHeader, i)\"\r\n    (cdkFocusChange)=\"_tabFocusChanged($event, i)\"\r\n  >\r\n    <span class=\"mdc-tab__ripple\"></span>\r\n\r\n    <!-- Needs to be a separate element, because we can't put\r\n         `overflow: hidden` on tab due to the ink bar. -->\r\n    <div\r\n      class=\"mat-mdc-tab-ripple\"\r\n      mat-ripple\r\n      [matRippleTrigger]=\"tabNode\"\r\n      [matRippleDisabled]=\"tab.disabled || disableRipple\"\r\n    ></div>\r\n\r\n    <span class=\"mdc-tab__content\">\r\n      <span class=\"mdc-tab__text-label\">\r\n        <!-- If there is a label template, use it. -->\r\n        <ng-template [ngIf]=\"tab.templateLabel\" [ngIfElse]=\"tabTextLabel\">\r\n          <ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template>\r\n        </ng-template>\r\n\r\n        <!-- If there is not a label template, fall back to the text label. -->\r\n        <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\r\n      </span>\r\n    </span>\r\n  </div>\r\n</mat-tab-header>\r\n\r\n<div\r\n  class=\"mat-mdc-tab-body-wrapper\"\r\n  [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\"\r\n  #tabBodyWrapper\r\n>\r\n  <mat-tab-body\r\n    role=\"tabpanel\"\r\n    *ngFor=\"let tab of _tabs; let i = index\"\r\n    [id]=\"_getTabContentId(i)\"\r\n    [attr.tabindex]=\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\"\r\n    [attr.aria-labelledby]=\"_getTabLabelId(i)\"\r\n    [class.mat-mdc-tab-body-active]=\"selectedIndex === i\"\r\n    [ngClass]=\"tab.bodyClass\"\r\n    [content]=\"tab.content!\"\r\n    [position]=\"tab.position!\"\r\n    [origin]=\"tab.origin\"\r\n    [animationDuration]=\"animationDuration\"\r\n    [preserveContent]=\"preserveContent\"\r\n    (_onCentered)=\"_removeTabBodyWrapperHeight()\"\r\n    (_onCentering)=\"_setTabBodyWrapperHeight($event)\"\r\n  >\r\n  </mat-tab-body>\r\n</div>\r\n", styles: [".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab[hidden]{display:none}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:.15s color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:.15s color linear;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:.1s}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab-indicator .mdc-tab-indicator__content--underline{border-top-width:2px}.mdc-tab-indicator .mdc-tab-indicator__content--icon{height:34px;font-size:34px}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:.25s transform cubic-bezier(.4,0,.2,1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:.15s opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:.1s}.mat-mdc-tab-ripple{position:absolute;inset:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:transparent}.mat-mdc-tab.mdc-tab{height:48px;flex-grow:0}.mat-mdc-tab .mdc-tab__ripple:before{content:\"\";display:block;position:absolute;inset:0;opacity:0;pointer-events:none}.mat-mdc-tab .mdc-tab__content{position:relative}.mat-mdc-tab:hover .mdc-tab__ripple:before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple:before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple:before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none!important;animation:none!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_TABS_CONFIG]
                }, {
                    type: Optional
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [ANIMATION_MODULE_TYPE]
                }] }]; }, propDecorators: { _allTabs: [{
                type: ContentChildren,
                args: [EsnTab, { descendants: true }]
            }], _tabBodyWrapper: [{
                type: ViewChild,
                args: ['tabBodyWrapper']
            }], _tabHeader: [{
                type: ViewChild,
                args: ['tabHeader']
            }], fitInkBarToContent: [{
                type: Input
            }], stretchTabs: [{
                type: Input,
                args: ['mat-stretch-tabs']
            }] } });
//# sourceMappingURL=data:application/json;base64,
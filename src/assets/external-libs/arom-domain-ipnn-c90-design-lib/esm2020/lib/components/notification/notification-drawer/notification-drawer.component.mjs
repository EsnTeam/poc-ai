import { Component, Input, } from '@angular/core';
import { animate, state, style, transition, trigger, } from '@angular/animations';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "./notification-drawer.service";
import * as i2 from "../notifications.service";
import * as i3 from "../notification-processing.service";
import * as i4 from "@angular/common";
import * as i5 from "../../button/button.component";
import * as i6 from "../../icon/icon.component";
import * as i7 from "../../tabs/tab-group/tab-group";
import * as i8 from "../../tabs/tab-group/tab";
import * as i9 from "../../tabs/tab-group/tab-label";
import * as i10 from "../../badge/badge.component";
import * as i11 from "../notification-list/notification-list.component";
export class EsnNotificationDrawer {
    constructor(drawerService, notificationsService, processingService, elementRef) {
        this.drawerService = drawerService;
        this.notificationsService = notificationsService;
        this.processingService = processingService;
        this.elementRef = elementRef;
        this.totalUnread = 0;
        this.totalNbNotifs = 0;
        this.displayed = 'not-displayed';
        this.refreshAll$ = new BehaviorSubject(false);
        this.refreshUnread$ = new BehaviorSubject(false);
        this.markAllAsRead$ = new BehaviorSubject(false);
        this.activeIndex = 0;
    }
    ngOnInit() {
        this.drawerService.isOpen$.subscribe(async (open) => {
            this.displayed = open ? 'displayed' : 'not-displayed';
            if (open) {
                this.refreshActiveTab();
            }
        });
        this.notificationsService
            .getUnread()
            .subscribe((unread) => (this.totalUnread = unread));
        this.notificationsService
            .getTotal()
            .subscribe((total) => {
            const prevTotal = this.totalNbNotifs;
            this.totalNbNotifs = total;
            if (!prevTotal && !!total) {
                this.updateScrollElms();
            }
        });
    }
    ngAfterViewInit() {
        this.updateScrollElms();
    }
    updateScrollElms() {
        setTimeout(() => {
            const tabBodies = this.elementRef.nativeElement.getElementsByClassName('mat-mdc-tab-body-content');
            this.scrollElementAll = tabBodies[0];
            this.scrollElementUnread = tabBodies[1];
        });
    }
    closeDrawer() {
        this.drawerService.closeDrawer();
    }
    tabChanged(e) {
        this.activeIndex = e.index;
        this.refreshActiveTab();
    }
    refreshActiveTab() {
        if (this.activeIndex == 0) {
            this.refreshAll$.next(true);
        }
        else {
            this.refreshUnread$.next(true);
        }
    }
    goToNotificationPage() {
        this.processingService.goToNotificationPage();
        this.closeDrawer();
    }
    markAllAsRead() {
        this.notificationsService.markAllAsRead();
        this.markAllAsRead$.next(true);
    }
}
EsnNotificationDrawer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnNotificationDrawer, deps: [{ token: i1.EsnNotificationDrawerService }, { token: i2.EsnNotificationsService }, { token: i3.EsnNotificationProcessingService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
EsnNotificationDrawer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: EsnNotificationDrawer, selector: "esn-notification-drawer", inputs: { totalUnread: "totalUnread" }, host: { classAttribute: "esn-notification-drawer" }, ngImport: i0, template: "<div\r\n  class=\"esn-notification-drawer-inner\"\r\n  [@enteringAnimation]=\"displayed\"\r\n  [ngClass]=\"displayed\"\r\n>\r\n  <div class=\"esn-notification-drawer-header\">\r\n    <div class=\"esn-notification-drawer-title\">Notifications</div>\r\n    <esn-button\r\n      [iconOnly]=\"true\"\r\n      type=\"basic\"\r\n      color=\"neutral\"\r\n      (click)=\"closeDrawer()\"\r\n    >\r\n      <esn-icon name=\"close\"></esn-icon>\r\n    </esn-button>\r\n  </div>\r\n  <div\r\n    class=\"esn-notification-drawer-body\"\r\n    [ngClass]=\"{ 'esn-notification-drawer-body-has-unread': totalUnread }\"\r\n  >\r\n    <esn-button\r\n      *ngIf=\"!!totalNbNotifs\"\r\n      class=\"esn-notification-drawer-see-all-btn\"\r\n      type=\"basic\"\r\n      color=\"primary\"\r\n      size=\"sm\"\r\n      (click)=\"goToNotificationPage()\"\r\n      >Tout voir</esn-button\r\n    >\r\n    <div\r\n      *ngIf=\"!!totalUnread\"\r\n      class=\"esn-notification-drawer-mark-all-as-read-container\"\r\n    >\r\n      <esn-button\r\n        class=\"esn-notification-drawer-mark-all-as-read-btn\"\r\n        type=\"basic\"\r\n        color=\"primary\"\r\n        size=\"sm\"\r\n        (click)=\"markAllAsRead()\"\r\n        >Tout marquer comme lu</esn-button\r\n      >\r\n    </div>\r\n    <esn-tab-group (selectedTabChange)=\"tabChanged($event)\">\r\n      <esn-tab label=\"Toutes\">\r\n        <esn-notification-list\r\n          [markAllAsReadSubject$]=\"markAllAsRead$\"\r\n          [refreshSubject$]=\"refreshAll$\"\r\n          [scrollElement]=\"scrollElementAll\"\r\n        ></esn-notification-list>\r\n      </esn-tab>\r\n\r\n      <esn-tab *ngIf=\"!!totalNbNotifs\">\r\n        <ng-template esn-tab-label>\r\n          <span>Non lues</span>&nbsp;<esn-badge\r\n            *ngIf=\"!!totalUnread\"\r\n            type=\"light\"\r\n            color=\"neutral\"\r\n            [bicolor]=\"true\"\r\n            >{{ totalUnread }}</esn-badge\r\n          >\r\n        </ng-template>\r\n        <esn-notification-list\r\n          [markAllAsReadSubject$]=\"markAllAsRead$\"\r\n          [unread]=\"true\"\r\n          [refreshSubject$]=\"refreshUnread$\"\r\n          [scrollElement]=\"scrollElementUnread\"\r\n        ></esn-notification-list>\r\n      </esn-tab>\r\n    </esn-tab-group>\r\n  </div>\r\n</div>\r\n", styles: [":host{position:fixed;z-index:10}:host .esn-notification-drawer-inner{display:flex;flex-direction:column;width:375px;height:100vh;max-height:100vh;position:fixed;right:-375px;top:0}:host .esn-notification-drawer-inner .esn-notification-drawer-header{flex:0 0 auto;display:flex;align-items:center;justify-content:space-between;padding:0 1.5rem}:host .esn-notification-drawer-inner .esn-notification-drawer-header .esn-notification-drawer-title{margin:1rem 0;font-size:18px;font-weight:700}:host .esn-notification-drawer-inner .esn-notification-drawer-body{position:relative;flex:1 1 auto;overflow-y:auto}:host .esn-notification-drawer-inner .esn-notification-drawer-body .esn-notification-drawer-see-all-btn{position:absolute;right:.5rem;top:.25rem;z-index:2}:host .esn-notification-drawer-inner .esn-notification-drawer-body .esn-notification-drawer-mark-all-as-read-container{position:absolute;z-index:1;top:47px;left:0;right:0;height:50px;display:flex;justify-content:flex-end;padding-right:.5rem}:host .hidden{visibility:hidden}::ng-deep .esn-notification-drawer-body esn-tab-group{position:absolute;inset:0;display:flex;flex-direction:column}::ng-deep .esn-notification-drawer-body.esn-notification-drawer-body-has-unread .mat-mdc-tab-body-wrapper{margin-top:50px}::ng-deep .esn-notification-drawer-body .esn-divider{border-top-width:2px}::ng-deep .cdk-overlay-backdrop.cdk-overlay-backdrop-showing.dark-backdrop{height:100%;width:100%;background-color:#00000057;transition-property:background-color;transition-duration:.2s}::ng-deep .cdk-overlay-backdrop.cdk-overlay-backdrop-showing.dark-backdrop.dark-backdrop-fading{background-color:#0000}::ng-deep esn-async-content-wrapper .esn-empty-state,::ng-deep esn-async-content-wrapper .error-state,::ng-deep esn-async-content-wrapper .esn-loader{margin-top:1rem}\n"], dependencies: [{ kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i5.EsnButton, selector: "esn-button", inputs: ["type", "size", "disabled", "round", "iconOnly", "color"], outputs: ["click"] }, { kind: "component", type: i6.EsnIcon, selector: "esn-icon", inputs: ["name", "boxed", "size"] }, { kind: "component", type: i7.EsnTabGroup, selector: "esn-tab-group", inputs: ["color", "disableRipple", "fitInkBarToContent", "mat-stretch-tabs"], exportAs: ["esnTabGroup"] }, { kind: "component", type: i8.EsnTab, selector: "esn-tab", inputs: ["disabled", "label", "aria-label", "aria-labelledby", "labelClass", "bodyClass"], exportAs: ["matTab"] }, { kind: "directive", type: i9.EsnTabLabel, selector: "[esn-tab-label], [esnTabLabel]" }, { kind: "component", type: i10.EsnBadge, selector: "esn-badge", inputs: ["size", "type", "color", "shade", "round", "disabled", "bicolor"] }, { kind: "component", type: i11.EsnNotificationList, selector: "esn-notification-list", inputs: ["refreshSubject$", "scrollElement", "markAllAsReadSubject$", "unread", "dateBefore", "dateAfter", "criticality"] }], animations: [
        trigger('enteringAnimation', [
            state('displayed', style({
                transform: 'translateX(-100%)',
            })),
            state('not-displayed', style({
                transform: 'translateX(0)',
            })),
            transition('* => *', [animate('0.2s')]),
        ]),
    ] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: EsnNotificationDrawer, decorators: [{
            type: Component,
            args: [{ selector: 'esn-notification-drawer', animations: [
                        trigger('enteringAnimation', [
                            state('displayed', style({
                                transform: 'translateX(-100%)',
                            })),
                            state('not-displayed', style({
                                transform: 'translateX(0)',
                            })),
                            transition('* => *', [animate('0.2s')]),
                        ]),
                    ], host: {
                        class: 'esn-notification-drawer',
                    }, template: "<div\r\n  class=\"esn-notification-drawer-inner\"\r\n  [@enteringAnimation]=\"displayed\"\r\n  [ngClass]=\"displayed\"\r\n>\r\n  <div class=\"esn-notification-drawer-header\">\r\n    <div class=\"esn-notification-drawer-title\">Notifications</div>\r\n    <esn-button\r\n      [iconOnly]=\"true\"\r\n      type=\"basic\"\r\n      color=\"neutral\"\r\n      (click)=\"closeDrawer()\"\r\n    >\r\n      <esn-icon name=\"close\"></esn-icon>\r\n    </esn-button>\r\n  </div>\r\n  <div\r\n    class=\"esn-notification-drawer-body\"\r\n    [ngClass]=\"{ 'esn-notification-drawer-body-has-unread': totalUnread }\"\r\n  >\r\n    <esn-button\r\n      *ngIf=\"!!totalNbNotifs\"\r\n      class=\"esn-notification-drawer-see-all-btn\"\r\n      type=\"basic\"\r\n      color=\"primary\"\r\n      size=\"sm\"\r\n      (click)=\"goToNotificationPage()\"\r\n      >Tout voir</esn-button\r\n    >\r\n    <div\r\n      *ngIf=\"!!totalUnread\"\r\n      class=\"esn-notification-drawer-mark-all-as-read-container\"\r\n    >\r\n      <esn-button\r\n        class=\"esn-notification-drawer-mark-all-as-read-btn\"\r\n        type=\"basic\"\r\n        color=\"primary\"\r\n        size=\"sm\"\r\n        (click)=\"markAllAsRead()\"\r\n        >Tout marquer comme lu</esn-button\r\n      >\r\n    </div>\r\n    <esn-tab-group (selectedTabChange)=\"tabChanged($event)\">\r\n      <esn-tab label=\"Toutes\">\r\n        <esn-notification-list\r\n          [markAllAsReadSubject$]=\"markAllAsRead$\"\r\n          [refreshSubject$]=\"refreshAll$\"\r\n          [scrollElement]=\"scrollElementAll\"\r\n        ></esn-notification-list>\r\n      </esn-tab>\r\n\r\n      <esn-tab *ngIf=\"!!totalNbNotifs\">\r\n        <ng-template esn-tab-label>\r\n          <span>Non lues</span>&nbsp;<esn-badge\r\n            *ngIf=\"!!totalUnread\"\r\n            type=\"light\"\r\n            color=\"neutral\"\r\n            [bicolor]=\"true\"\r\n            >{{ totalUnread }}</esn-badge\r\n          >\r\n        </ng-template>\r\n        <esn-notification-list\r\n          [markAllAsReadSubject$]=\"markAllAsRead$\"\r\n          [unread]=\"true\"\r\n          [refreshSubject$]=\"refreshUnread$\"\r\n          [scrollElement]=\"scrollElementUnread\"\r\n        ></esn-notification-list>\r\n      </esn-tab>\r\n    </esn-tab-group>\r\n  </div>\r\n</div>\r\n", styles: [":host{position:fixed;z-index:10}:host .esn-notification-drawer-inner{display:flex;flex-direction:column;width:375px;height:100vh;max-height:100vh;position:fixed;right:-375px;top:0}:host .esn-notification-drawer-inner .esn-notification-drawer-header{flex:0 0 auto;display:flex;align-items:center;justify-content:space-between;padding:0 1.5rem}:host .esn-notification-drawer-inner .esn-notification-drawer-header .esn-notification-drawer-title{margin:1rem 0;font-size:18px;font-weight:700}:host .esn-notification-drawer-inner .esn-notification-drawer-body{position:relative;flex:1 1 auto;overflow-y:auto}:host .esn-notification-drawer-inner .esn-notification-drawer-body .esn-notification-drawer-see-all-btn{position:absolute;right:.5rem;top:.25rem;z-index:2}:host .esn-notification-drawer-inner .esn-notification-drawer-body .esn-notification-drawer-mark-all-as-read-container{position:absolute;z-index:1;top:47px;left:0;right:0;height:50px;display:flex;justify-content:flex-end;padding-right:.5rem}:host .hidden{visibility:hidden}::ng-deep .esn-notification-drawer-body esn-tab-group{position:absolute;inset:0;display:flex;flex-direction:column}::ng-deep .esn-notification-drawer-body.esn-notification-drawer-body-has-unread .mat-mdc-tab-body-wrapper{margin-top:50px}::ng-deep .esn-notification-drawer-body .esn-divider{border-top-width:2px}::ng-deep .cdk-overlay-backdrop.cdk-overlay-backdrop-showing.dark-backdrop{height:100%;width:100%;background-color:#00000057;transition-property:background-color;transition-duration:.2s}::ng-deep .cdk-overlay-backdrop.cdk-overlay-backdrop-showing.dark-backdrop.dark-backdrop-fading{background-color:#0000}::ng-deep esn-async-content-wrapper .esn-empty-state,::ng-deep esn-async-content-wrapper .error-state,::ng-deep esn-async-content-wrapper .esn-loader{margin-top:1rem}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.EsnNotificationDrawerService }, { type: i2.EsnNotificationsService }, { type: i3.EsnNotificationProcessingService }, { type: i0.ElementRef }]; }, propDecorators: { totalUnread: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,